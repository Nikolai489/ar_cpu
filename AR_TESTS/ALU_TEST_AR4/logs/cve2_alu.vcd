$version Generated by VerilatedVcd $end
$timescale 1ns $end

 $scope module TOP $end
  $var wire 34 Q adder_result_ext_o [33:0] $end
  $var wire 32 P adder_result_o [31:0] $end
  $var wire  1 B clk_i $end
  $var wire  1 T comparison_result_o $end
  $var wire 32 M imd_val_d_o[0] [31:0] $end
  $var wire 32 N imd_val_d_o[1] [31:0] $end
  $var wire 32 K imd_val_q_i[0] [31:0] $end
  $var wire 32 L imd_val_q_i[1] [31:0] $end
  $var wire  2 O imd_val_we_o [1:0] $end
  $var wire  1 E instr_first_cycle_i $end
  $var wire  1 U is_equal_result_o $end
  $var wire 33 F multdiv_operand_a_i [32:0] $end
  $var wire 33 H multdiv_operand_b_i [32:0] $end
  $var wire  1 J multdiv_sel_i $end
  $var wire 32 C operand_a_i [31:0] $end
  $var wire 32 D operand_b_i [31:0] $end
  $var wire  7 A operator_i [6:0] $end
  $var wire 32 S result_o [31:0] $end
  $scope module cve2_alu $end
   $var wire 32 [ RV32B [31:0] $end
   $var wire 33 & adder_in_a [32:0] $end
   $var wire 33 ( adder_in_b [32:0] $end
   $var wire  1 \ adder_op_a_shift1 $end
   $var wire  1 \ adder_op_a_shift2 $end
   $var wire  1 \ adder_op_a_shift3 $end
   $var wire  1 % adder_op_b_negate $end
   $var wire 32 P adder_result [31:0] $end
   $var wire 34 Q adder_result_ext_o [33:0] $end
   $var wire 32 P adder_result_o [31:0] $end
   $var wire  5 7 bfp_len [4:0] $end
   $var wire 32 ] bfp_mask [31:0] $end
   $var wire 32 ] bfp_mask_rev [31:0] $end
   $var wire  5 Z bfp_off [4:0] $end
   $var wire  1 \ bfp_op $end
   $var wire 32 ] bfp_result [31:0] $end
   $var wire  6 ^ bitcnt_result [5:0] $end
   $var wire 32 ] butterfly_result [31:0] $end
   $var wire  1 9 bwlogic_and $end
   $var wire 32 < bwlogic_and_result [31:0] $end
   $var wire  1 # bwlogic_op_b_negate $end
   $var wire 32 : bwlogic_operand_b [31:0] $end
   $var wire  1 8 bwlogic_or $end
   $var wire 32 ; bwlogic_or_result [31:0] $end
   $var wire 32 > bwlogic_result [31:0] $end
   $var wire 32 = bwlogic_xor_result [31:0] $end
   $var wire  1 B clk_i $end
   $var wire 32 ] clmul_result [31:0] $end
   $var wire  1 , cmp_result $end
   $var wire  1 + cmp_signed $end
   $var wire  1 T comparison_result_o $end
   $var wire 32 M imd_val_d_o[0] [31:0] $end
   $var wire 32 N imd_val_d_o[1] [31:0] $end
   $var wire 32 K imd_val_q_i[0] [31:0] $end
   $var wire 32 L imd_val_q_i[1] [31:0] $end
   $var wire  2 O imd_val_we_o [1:0] $end
   $var wire  1 E instr_first_cycle_i $end
   $var wire 32 ] invbutterfly_result [31:0] $end
   $var wire  1 U is_equal $end
   $var wire  1 U is_equal_result_o $end
   $var wire  1 * is_greater_equal $end
   $var wire 32 ] minmax_result [31:0] $end
   $var wire 33 F multdiv_operand_a_i [32:0] $end
   $var wire 33 H multdiv_operand_b_i [32:0] $end
   $var wire  1 J multdiv_sel_i $end
   $var wire 32 ] multicycle_result [31:0] $end
   $var wire 32 C operand_a_i [31:0] $end
   $var wire 32 $ operand_a_rev [31:0] $end
   $var wire 32 D operand_b_i [31:0] $end
   $var wire 33 V operand_b_neg [32:0] $end
   $var wire  7 A operator_i [6:0] $end
   $var wire 32 ] pack_result [31:0] $end
   $var wire 32 S result_o [31:0] $end
   $var wire 32 ] rev_result [31:0] $end
   $var wire 32 ] sext_result [31:0] $end
   $var wire  6 . shift_amt [5:0] $end
   $var wire  6 Y shift_amt_compl [5:0] $end
   $var wire  1 X shift_arith $end
   $var wire  1 \ shift_funnel $end
   $var wire  1 - shift_left $end
   $var wire  1 \ shift_ones $end
   $var wire 32 / shift_operand [31:0] $end
   $var wire 32 5 shift_result [31:0] $end
   $var wire 33 2 shift_result_ext [32:0] $end
   $var wire 33 0 shift_result_ext_signed [32:0] $end
   $var wire 32 6 shift_result_rev [31:0] $end
   $var wire  1 \ shift_sbmode $end
   $var wire 32 ] shuffle_result [31:0] $end
   $var wire 32 ] singlebit_result [31:0] $end
   $var wire  1 B unused $end
   $var wire  1 \ unused_shift_amt_compl $end
   $var wire  1 4 unused_shift_result_ext $end
   $var wire 32 ] xperm_result [31:0] $end
   $scope module g_no_alu_rvb $end
    $var wire 32 ] unused_butterfly_result [31:0] $end
    $var wire 32 ? unused_imd_val_q[0] [31:0] $end
    $var wire 32 @ unused_imd_val_q[1] [31:0] $end
    $var wire 32 ] unused_invbutterfly_result [31:0] $end
   $upscope $end
   $scope module unnamedblk1 $end
    $var wire 32 _ i [31:0] $end
   $upscope $end
  $upscope $end
  $scope module cve2_pkg $end
   $var wire 32 o CSR_MARCHID_VALUE [31:0] $end
   $var wire 32 ] CSR_MCONFIGPTR_VALUE [31:0] $end
   $var wire 32 i CSR_MEIX_BIT [31:0] $end
   $var wire 32 n CSR_MFIX_BIT_HIGH [31:0] $end
   $var wire 32 ` CSR_MFIX_BIT_LOW [31:0] $end
   $var wire 32 ] CSR_MIMPID_VALUE [31:0] $end
   $var wire  2 m CSR_MISA_MXL [1:0] $end
   $var wire 32 b CSR_MSECCFG_MML_BIT [31:0] $end
   $var wire 32 c CSR_MSECCFG_MMWP_BIT [31:0] $end
   $var wire 32 d CSR_MSECCFG_RLB_BIT [31:0] $end
   $var wire 32 g CSR_MSIX_BIT [31:0] $end
   $var wire 32 g CSR_MSTATUS_MIE_BIT [31:0] $end
   $var wire 32 h CSR_MSTATUS_MPIE_BIT [31:0] $end
   $var wire 32 j CSR_MSTATUS_MPP_BIT_HIGH [31:0] $end
   $var wire 32 i CSR_MSTATUS_MPP_BIT_LOW [31:0] $end
   $var wire 32 k CSR_MSTATUS_MPRV_BIT [31:0] $end
   $var wire 32 l CSR_MSTATUS_TW_BIT [31:0] $end
   $var wire 32 h CSR_MTIX_BIT [31:0] $end
   $var wire 32 ] CSR_MVENDORID_VALUE [31:0] $end
   $var wire 12 f CSR_OFF_PMP_ADDR [11:0] $end
   $var wire 12 e CSR_OFF_PMP_CFG [11:0] $end
   $var wire 32 a PMP_CFG_W [31:0] $end
   $var wire 32 d PMP_D [31:0] $end
   $var wire 32 b PMP_I [31:0] $end
   $var wire 32 c PMP_I2 [31:0] $end
   $var wire 32 ` PMP_MAX_REGIONS [31:0] $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
0#
b01100011110001001101111001001100 $
0%
b001100100111101100100011110001101 &
b011001000011110010011000011010010 (
0*
0+
0,
1-
b001001 .
b01100011110001001101111001001100 /
b000000000001100011110001001101111 0
b000000000001100011110001001101111 2
04
b11110110010001111000110000000000 5
b11110110010001111000110000000000 6
b00100 7
08
09
b01100100001111001001100001101001 :
b01110110011111111011101111101111 ;
b00100000001110000000000001000000 <
b01010110010001111011101110101111 =
b01010110010001111011101110101111 >
b00000000000000000000000000000000 ?
b00000000000000000000000000000000 @
b0001010 A
1B
b00110010011110110010001111000110 C
b01100100001111001001100001101001 D
0E
b000000000000000000000000000000000 F
b000000000000000000000000000000000 H
0J
b00000000000000000000000000000000 K
b00000000000000000000000000000000 L
b00000000000000000000000000000000 M
b00000000000000000000000000000000 N
b00 O
b10010110101101111011110000101111 P
b0100101101011011110111100001011111 Q
b11110110010001111000110000000000 S
0T
0U
b100110111100001101100111100101101 V
0X
b001001 Y
b11100 Z
b00000000000000000000000000000000 [
0\
b00000000000000000000000000000000 ]
b000000 ^
b00000000000000000000000000100000 _
b00000000000000000000000000010000 `
b00000000000000000000000000001000 a
b00000000000000000000000000000000 b
b00000000000000000000000000000001 c
b00000000000000000000000000000010 d
b001110100000 e
b001110110000 f
b00000000000000000000000000000011 g
b00000000000000000000000000000111 h
b00000000000000000000000000001011 i
b00000000000000000000000000001100 j
b00000000000000000000000000010001 k
b00000000000000000000000000010101 l
b01 m
b00000000000000000000000000011110 n
b00000000000000000000000000010110 o
#1
0B
#2
1B
#3
0B
#4
1B
#5
0B
#6
1B
#7
0B
#8
1B
#9
0B
#10
1B
#11
0B
#12
1B
#13
0B
#14
1B
#15
0B
#16
1B
#17
0B
#18
1B
#19
0B
#20
b10001010001110110000110100101110 $
b011101001011000011011100010100011 &
b000110010100100101011100111111110 (
0-
b011111 .
b01110100101100001101110001010001 /
b000000000000000000000000000000000 0
b000000000000000000000000000000000 2
b00000000000000000000000000000000 5
b00000000000000000000000000000000 6
b01001 7
18
b00011001010010010101110011111111 :
b01111101111110011101110011111111 ;
b00010000000000000101110001010001 <
b01101101111110011000000010101110 =
b01111101111110011101110011111111 >
b0000011 A
1B
b01110100101100001101110001010001 C
b00011001010010010101110011111111 D
b10001101111110100011100101010000 P
b0100011011111101000111001010100001 Q
b01111101111110011101110011111111 S
b111001101011011010100011000000001 V
b011111 Y
b01001 Z
#21
0B
#22
1B
#23
0B
#24
1B
#25
0B
#26
1B
#27
0B
#28
1B
#29
0B
#30
1B
#31
0B
#32
1B
#33
0B
#34
1B
#35
0B
#36
1B
#37
0B
#38
1B
#39
0B
#40
b00110111000110101010101001000110 $
1%
b011000100101010101011000111011001 &
b110111000111000111100000110101101 (
1*
1+
1,
b001001 .
b01100010010101010101100011101100 /
b000000000001100010010101010101100 0
b000000000001100010010101010101100 2
b00000000001100010010101010101100 5
b00110101010101001000110000000000 6
b00011 7
08
b00100011100011100001111100101001 :
b01100011110111110101111111101101 ;
b00100010000001000001100000101000 <
b01000001110110110100011111000101 =
b01000001110110110100011111000101 >
b0011011 A
1B
b01100010010101010101100011101100 C
b00100011100011100001111100101001 D
b00111110110001110011100111000011 P
b1001111101100011100111001110000110 Q
b00000000000000000000000000000001 S
1T
b110111000111000111100000110101101 V
b001001 Y
b01110 Z
#41
0B
#42
1B
#43
0B
#44
1B
#45
0B
#46
1B
#47
0B
#48
1B
#49
0B
#50
1B
#51
0B
#52
1B
#53
0B
#54
1B
#55
0B
#56
1B
#57
0B
#58
1B
#59
0B
#60
b01011101000110101101100010111100 $
b001111010001101101011000101110101 &
b101011111000000100101000010101001 (
0*
0+
b001011 .
b00111101000110110101100010111010 /
b000000000000001111010001101101011 0
b000000000000001111010001101101011 2
b00000000000001111010001101101011 5
b11010110110001011110000000000000 6
b10000 7
b01010000011111101101011110101011 :
b01111101011111111101111110111011 ;
b00010000000110100101000010101010 <
b01101101011001011000111100010001 =
b01101101011001011000111100010001 >
b0011110 A
1B
b00111101000110110101100010111010 C
b01010000011111101101011110101011 D
b11101100100111001000000100001111 P
b0111011001001110010000001000011110 Q
b101011111000000100101000010101001 V
b001011 Y
b11110 Z
#61
0B
#62
1B
#63
0B
#64
1B
#65
0B
#66
1B
#67
0B
#68
1B
#69
0B
#70
1B
#71
0B
#72
1B
#73
0B
#74
1B
#75
0B
#76
1B
#77
0B
#78
1B
#79
0B
#80
b11011111011110001110110110000010 $
0%
b010000011011011100011110111110111 &
b011110011110001010101001111000110 (
0,
b000011 .
b01000001101101110001111011111011 /
b000001000001101101110001111011111 0
b000001000001101101110001111011111 2
b00001000001101101110001111011111 5
b11111011110001110110110000010000 6
b01001 7
b01111001111000101010100111100011 :
b01111001111101111011111111111011 ;
b01000001101000100000100011100011 <
b00111000010101011011011100011000 =
b00111000010101011011011100011000 >
b0000010 A
1B
b01000001101101110001111011111011 C
b01111001111000101010100111100011 D
b10111011100110011100100011011110 P
b0101110111001100111001000110111101 Q
b00111000010101011011011100011000 S
0T
b100001100001110101010110000111001 V
b000011 Y
b00010 Z
#81
0B
#82
1B
#83
0B
#84
1B
#85
0B
#86
1B
#87
0B
#88
1B
#89
0B
#90
1B
#91
0B
#92
1B
#93
0B
#94
1B
#95
0B
#96
1B
#97
0B
#98
1B
#99
0B
#100
b00111110000000001111101010001010 $
b010100010101111100000000011111001 &
b010110111101000001100010110000100 (
b000010 .
b01010001010111110000000001111100 /
b000010100010101111100000000011111 0
b000010100010101111100000000011111 2
b00010100010101111100000000011111 5
b11111000000000111110101000101000 6
b01011 7
b01011011110100000110001011000010 :
b01011011110111110110001011111110 ;
b01010001010100000000000001000000 <
b00001010100011110110001010111110 =
b00001010100011110110001010111110 >
b0001001 A
1B
b01010001010111110000000001111100 C
b01011011110100000110001011000010 D
b10101101001011110110001100111110 P
b0101011010010111101100011001111101 Q
b00010100010101111100000000011111 S
b101001000010111110011101001111011 V
b000010 Y
b10000 Z
#101
0B
#102
1B
#103
0B
#104
1B
#105
0B
#106
1B
#107
0B
#108
1B
#109
0B
#110
1B
#111
0B
#112
1B
#113
0B
#114
1B
#115
0B
#116
1B
#117
0B
#118
1B
#119
0B
#120
b00011111111001001000110110110010 $
b010011011011000100100111111110001 &
b000000100001011000100011000110110 (
1*
b011011 .
b01001101101100010010011111111000 /
b000000000000000000000000000001001 0
b000000000000000000000000000001001 2
b00000000000000000000000000001001 5
b10010000000000000000000000000000 6
b00010 7
19
b00000010000101100010001100011011 :
b01001111101101110010011111111011 ;
b00000000000100000010001100011000 <
b01001111101001110000010011100011 =
b00000000000100000010001100011000 >
b0000100 A
1B
b01001101101100010010011111111000 C
b00000010000101100010001100011011 D
b01001111110001110100101100010011 P
b0010011111100011101001011000100111 Q
b00000000000100000010001100011000 S
b111111011110100111011100111001001 V
b011011 Y
b10110 Z
#121
0B
#122
1B
#123
0B
#124
1B
#125
0B
#126
1B
#127
0B
#128
1B
#129
0B
#130
1B
#131
0B
#132
1B
#133
0B
#134
1B
#135
0B
#136
1B
#137
0B
#138
1B
#139
0B
#140
b11100111101100110000100110001000 $
1%
b000100011001000011001101111001111 &
b100110010001000010111100011100101 (
0*
1+
1,
b001101 .
b00010001100100001100110111100111 /
b000000000000000001000110010000110 0
b000000000000000001000110010000110 2
b00000000000000001000110010000110 5
b01100001001100010000000000000000 6
b00110 7
09
b01100110111011110100001110001101 :
b01110111111111111100111111101111 ;
b00000000100000000100000110000101 <
b01110111011111111000111001101010 =
b01110111011111111000111001101010 >
b0011001 A
1B
b00010001100100001100110111100111 C
b01100110111011110100001110001101 D
b10101010101000011000101001011010 P
b0101010101010000110001010010110100 Q
b00000000000000000000000000000001 S
1T
b100110010001000010111100011100101 V
b001101 Y
b01111 Z
#141
0B
#142
1B
#143
0B
#144
1B
#145
0B
#146
1B
#147
0B
#148
1B
#149
0B
#150
1B
#151
0B
#152
1B
#153
0B
#154
1B
#155
0B
#156
1B
#157
0B
#158
1B
#159
0B
#160
b01011010101001000100101011001100 $
0%
b001100110101001000100101010110101 &
b000100001001110011111001001011100 (
1*
0+
0,
b001110 .
b00110011010100100010010101011010 /
b000000000000000001100110101001000 0
b000000000000000001100110101001000 2
b00000000000000001100110101001000 5
b00010010101100110000000000000000 6
b10000 7
b00010000100111001111100100101110 :
b00110011110111101111110101111110 ;
b00010000000100000010000100001010 <
b00100011110011101101110001110100 =
b00100011110011101101110001110100 >
b0001001 A
1B
b00110011010100100010010101011010 C
b00010000100111001111100100101110 D
b01000011111011110001111010001000 P
b0010000111110111100011110100010001 Q
b00000000000000001100110101001000 S
0T
b111011110110001100000110110100011 V
b001110 Y
b11100 Z
#161
0B
#162
1B
#163
0B
#164
1B
#165
0B
#166
1B
#167
0B
#168
1B
#169
0B
#170
1B
#171
0B
#172
1B
#173
0B
#174
1B
#175
0B
#176
1B
#177
0B
#178
1B
#179
0B
#180
b11001100010000110011101111111110 $
b011111111101110011000010001100111 &
b000110111110111111010111100111110 (
0*
b011111 .
b01111111110111001100001000110011 /
b000000000000000000000000000000000 0
b000000000000000000000000000000000 2
b00000000000000000000000000000000 5
b00000000000000000000000000000000 6
b01011 7
18
b00011011111011111101011110011111 :
b01111111111111111101011110111111 ;
b00011011110011001100001000010011 <
b01100100001100110001010110101100 =
b01111111111111111101011110111111 >
b0000011 A
1B
b01111111110111001100001000110011 C
b00011011111011111101011110011111 D
b10011011110011001001100111010010 P
b0100110111100110010011001110100101 Q
b01111111111111111101011110111111 S
b111001000001000000101000011000001 V
b011111 Y
b01111 Z
#181
0B
#182
1B
#183
0B
#184
1B
#185
0B
#186
1B
#187
0B
#188
1B
#189
0B
#190
1B
#191
0B
#192
1B
#193
0B
#194
1B
#195
0B
#196
1B
#197
0B
#198
1B
#199
0B
