
Building warp-v_for_sram

You have agreed to our Terms of Service here: https://makerchip.com/terms.

Compiling warp-v_for_sram


Simulating warp-v_for_sram

VCD info: dumpfile out/warp-v_for_sram.vcd opened for output.
VCD warning: $dumpvars: Unsupported argument type (vpiPackage)
Simulation PASSED!!!

Synthesizing warp-v_for_sram


 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.29 (git sha1 9c5a60eb201, clang 14.0.3 -fPIC -Os)

[TCL: yosys -import] Command name collision: found pre-existing command `cd' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `eval' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `exec' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `read' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `trace' -> skip.

1. Executing Liberty frontend: lib/ARlogic.yosys.lib
Imported 53 cell types from liberty file.

2. Executing Verilog-2005 frontend: out/warp-v_for_sram.sv
Parsing SystemVerilog input from `out/warp-v_for_sram.sv' to AST representation.
Generating RTLIL representation for module `\cpu'.
Warning: wire '\L1_FETCH_Instr_OrigInst_Src[1].L1_dummy_a1' is assigned in a block at out/warp-v_for_sram.sv:1685.38-1685.130.
Warning: wire '\L1_FETCH_Instr_OrigInst_Src[1].L1_dummy_a2' is assigned in a block at out/warp-v_for_sram.sv:1686.38-1686.130.
Warning: wire '\L1_FETCH_Instr_OrigInst_Src[1].L1_dummy_a3' is assigned in a block at out/warp-v_for_sram.sv:1687.38-1687.130.
Warning: wire '\L1_FETCH_Instr_OrigInst_Src[2].L1_dummy_a1' is assigned in a block at out/warp-v_for_sram.sv:1685.38-1685.130.
Warning: wire '\L1_FETCH_Instr_OrigInst_Src[2].L1_dummy_a2' is assigned in a block at out/warp-v_for_sram.sv:1686.38-1686.130.
Warning: wire '\L1_FETCH_Instr_OrigInst_Src[2].L1_dummy_a3' is assigned in a block at out/warp-v_for_sram.sv:1687.38-1687.130.
Warning: wire '\L1c_FETCH_Instr_Src[1].L1_dummy_a2' is assigned in a block at out/warp-v_for_sram.sv:1739.35-1739.111.
Warning: wire '\L1c_FETCH_Instr_Src[1].L1_dummy_a3' is assigned in a block at out/warp-v_for_sram.sv:1740.35-1740.111.
Warning: wire '\L1_FETCH_Instr_Src[1].L1_is_reg_a2' is assigned in a block at out/warp-v_for_sram.sv:1743.35-1743.111.
Warning: wire '\L1_FETCH_Instr_Src[1].L1_is_reg_a3' is assigned in a block at out/warp-v_for_sram.sv:1744.35-1744.111.
Warning: wire '\L1_FETCH_Instr_Src[1].L1_reg_a2' is assigned in a block at out/warp-v_for_sram.sv:1747.35-1747.115.
Warning: wire '\L1_FETCH_Instr_Src[1].L1_reg_a3' is assigned in a block at out/warp-v_for_sram.sv:1748.35-1748.115.
Warning: wire '\L1b_FETCH_Instr_Src[1].L1_reg_value_a2' is assigned in a block at out/warp-v_for_sram.sv:1751.35-1751.131.
Warning: wire '\L1b_FETCH_Instr_Src[1].L1_reg_value_a3' is assigned in a block at out/warp-v_for_sram.sv:1752.35-1752.131.
Warning: wire '\L1c_FETCH_Instr_Src[2].L1_dummy_a2' is assigned in a block at out/warp-v_for_sram.sv:1739.35-1739.111.
Warning: wire '\L1c_FETCH_Instr_Src[2].L1_dummy_a3' is assigned in a block at out/warp-v_for_sram.sv:1740.35-1740.111.
Warning: wire '\L1_FETCH_Instr_Src[2].L1_is_reg_a2' is assigned in a block at out/warp-v_for_sram.sv:1743.35-1743.111.
Warning: wire '\L1_FETCH_Instr_Src[2].L1_is_reg_a3' is assigned in a block at out/warp-v_for_sram.sv:1744.35-1744.111.
Warning: wire '\L1_FETCH_Instr_Src[2].L1_reg_a2' is assigned in a block at out/warp-v_for_sram.sv:1747.35-1747.115.
Warning: wire '\L1_FETCH_Instr_Src[2].L1_reg_a3' is assigned in a block at out/warp-v_for_sram.sv:1748.35-1748.115.
Warning: wire '\L1b_FETCH_Instr_Src[2].L1_reg_value_a2' is assigned in a block at out/warp-v_for_sram.sv:1751.35-1751.131.
Warning: wire '\L1b_FETCH_Instr_Src[2].L1_reg_value_a3' is assigned in a block at out/warp-v_for_sram.sv:1752.35-1752.131.
Warning: wire '\L1_MEM_Data_Src[1].L1_dummy_a4' is assigned in a block at out/warp-v_for_sram.sv:1797.35-1797.103.
Warning: wire '\L1_MEM_Data_Src[2].L1_dummy_a4' is assigned in a block at out/warp-v_for_sram.sv:1797.35-1797.103.
Warning: Replacing memory \FETCH_Instr_Regs_pending_a3 with list of registers. See out/warp-v_for_sram.sv:1730
Successfully finished Verilog frontend.

3. Executing HIERARCHY pass (managing design hierarchy).

3.1. Analyzing design hierarchy..
Top module:  \cpu

3.2. Analyzing design hierarchy..
Top module:  \cpu
Removing unused module `\XOR2_X0X0_90x128y6p'.
Removing unused module `\XNOR2_X0X0_90x128y6p'.
Removing unused module `\OR4_X2X2_90x128y6p'.
Removing unused module `\OR3_X2X2_90x128y6p'.
Removing unused module `\OR2_X2X2_90x128y6p'.
Removing unused module `\OAI33_X0X1_90x128y6p'.
Removing unused module `\OAI32_X0X1_90x128y6p'.
Removing unused module `\OAI31_X0X0_90x128y6p'.
Removing unused module `\OAI2NN2_X1X1_90x128y6p'.
Removing unused module `\OAI22_X0X0_90x128y6p'.
Removing unused module `\OAI222_X1X0_90x128y6p'.
Removing unused module `\OAI221_X1X0_90x128y6p'.
Removing unused module `\OAI21_X0X0_90x128y6p'.
Removing unused module `\OAI211_X0X0_90x128y6p'.
Removing unused module `\NOR4_X0X1_90x128y6p'.
Removing unused module `\NOR4N_X2X2_90x128y6p'.
Removing unused module `\NOR4NN_X0X1_90x128y6p'.
Removing unused module `\NOR3_X0X2_90x128y6p'.
Removing unused module `\NOR3N_X0X2_90x128y6p'.
Removing unused module `\NOR2_X1X2_90x128y6p'.
Removing unused module `\NOR2N_X1X2_90x128y6p'.
Removing unused module `\NAND4_X1X0_90x128y6p'.
Removing unused module `\NAND4N_X2X2_90x128y6p'.
Removing unused module `\NAND4NN_X1X0_90x128y6p'.
Removing unused module `\NAND3_X2X0_90x128y6p'.
Removing unused module `\NAND3N_X2X0_90x128y6p'.
Removing unused module `\NAND2_X2X1_90x128y6p'.
Removing unused module `\NAND2N_X2X1_90x128y6p'.
Removing unused module `\MUXN21_X0X0_90x128y6p'.
Removing unused module `\MUX41_X2X2_90x128y6p'.
Removing unused module `\MUX31_X2X2_90x128y6p'.
Removing unused module `\MUX21_X2X2_90x128y6p'.
Removing unused module `\INV_X4X4_90x128y6p'.
Removing unused module `\DFF_X2X2_90x128y6p'.
Removing unused module `\DFFAS_X2X2_90x128y6p'.
Removing unused module `\DFFASN_X2X2_90x128y6p'.
Removing unused module `\DFFAR_X4X4_90x128y6p'.
Removing unused module `\DFFARN_X2X2_90x128y6p'.
Removing unused module `\DFFARNASN_X2X2_90x128y6p'.
Removing unused module `\BUF_X2X2_90x128y6p'.
Removing unused module `\AOI33_X1X0_90x128y6p'.
Removing unused module `\AOI32_X1X0_90x128y6p'.
Removing unused module `\AOI31_X1X0_90x128y6p'.
Removing unused module `\AOI2NN2_X2X2_90x128y6p'.
Removing unused module `\AOI2NN1_X1X1_90x128y6p'.
Removing unused module `\AOI22_X0X0_90x128y6p'.
Removing unused module `\AOI222_X0X1_90x128y6p'.
Removing unused module `\AOI221_X0X2_90x128y6p'.
Removing unused module `\AOI21_X0X0_90x128y6p'.
Removing unused module `\AOI211_X0X2_90x128y6p'.
Removing unused module `\AND4_X1X1_90x128y6p'.
Removing unused module `\AND3_X2X2_90x128y6p'.
Removing unused module `\AND2_X2X2_90x128y6p'.
Removed 53 unused modules.

4. Executing PROC pass (convert processes to netlists).

4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed 1 dead cases from process $proc$out/warp-v_for_sram.sv:0$1842 in module cpu.
Marked 1 switch rules as full_case in process $proc$out/warp-v_for_sram.sv:0$1842 in module cpu.
Removed 1 dead cases from process $proc$out/warp-v_for_sram.sv:0$1839 in module cpu.
Marked 1 switch rules as full_case in process $proc$out/warp-v_for_sram.sv:0$1839 in module cpu.
Removed 1 dead cases from process $proc$out/warp-v_for_sram.sv:0$1836 in module cpu.
Marked 1 switch rules as full_case in process $proc$out/warp-v_for_sram.sv:0$1836 in module cpu.
Marked 1 switch rules as full_case in process $proc$out/warp-v_for_sram.sv:3401$1660 in module cpu.
Removed a total of 3 dead cases.

4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 356 assignments to connections.

4.4. Executing PROC_INIT pass (extract init attributes).

4.5. Executing PROC_ARST pass (detect async resets in processes).

4.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.
<suppressed ~4 debug messages>

4.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:0$1845'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:0$1842'.
     1/1: $1$mem2reg_rd$\FETCH_Instr_Regs_pending_a3$out/warp-v_for_sram.sv:2658$583_DATA[0:0]$1844
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:0$1839'.
     1/1: $1$mem2reg_rd$\FETCH_Instr_Regs_pending_a3$out/warp-v_for_sram.sv:2658$582_DATA[0:0]$1841
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:0$1836'.
     1/1: $1$mem2reg_rd$\FETCH_Instr_Regs_pending_a3$out/warp-v_for_sram.sv:2673$581_DATA[0:0]$1838
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1797$1799'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1797$1798'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1752$1797'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1751$1796'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1748$1795'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1747$1794'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1744$1793'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1743$1792'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1740$1791'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1739$1790'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1752$1789'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1751$1788'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1748$1787'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1747$1786'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1744$1785'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1743$1784'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1740$1783'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1739$1782'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1730$1781'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1730$1780'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1730$1779'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1730$1778'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1730$1777'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1730$1776'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1730$1775'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1730$1774'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1730$1773'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1730$1772'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1730$1771'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1730$1770'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1730$1769'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1730$1768'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1730$1767'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1730$1766'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1730$1765'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1730$1764'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1730$1763'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1730$1762'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1730$1761'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1730$1760'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1730$1759'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1730$1758'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1730$1757'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1730$1756'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1730$1755'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1730$1754'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1730$1753'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1730$1752'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1730$1751'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1687$1750'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1686$1749'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1685$1748'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1687$1747'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1686$1746'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1685$1745'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:3401$1660'.
     1/3: $1$memwr$\FETCH_Instr_Regs_value_a3$out/warp-v_for_sram.sv:3403$584_EN[31:0]$1666
     2/3: $1$memwr$\FETCH_Instr_Regs_value_a3$out/warp-v_for_sram.sv:3403$584_DATA[31:0]$1665
     3/3: $1$memwr$\FETCH_Instr_Regs_value_a3$out/warp-v_for_sram.sv:3403$584_ADDR[4:0]$1664
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1789$845'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1786$844'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1783$843'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1780$842'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1777$841'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1774$840'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1771$839'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1768$838'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1721$837'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1720$836'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1717$835'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1716$834'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1713$833'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1712$832'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1709$831'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1708$830'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1705$829'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1704$828'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1698$826'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1697$825'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1677$824'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1676$823'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1675$822'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1672$821'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1664$820'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1661$819'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1658$818'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1655$817'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1652$816'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1651$815'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1648$814'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1645$813'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1642$812'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1639$811'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1638$810'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1635$809'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1634$808'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1631$807'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1630$806'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1627$805'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1626$804'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1625$803'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1622$802'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1619$801'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1618$800'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1617$799'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1616$798'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1613$797'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1612$796'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1609$795'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1608$794'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1605$793'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1604$792'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1601$791'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1600$790'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1597$789'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1596$788'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1593$787'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1592$786'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1589$785'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1588$784'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1585$783'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1584$782'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1581$781'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1580$780'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1577$779'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1576$778'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1573$777'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1572$776'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1569$775'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1568$774'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1565$773'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1564$772'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1561$771'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1560$770'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1557$769'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1554$768'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1553$767'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1552$766'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1549$765'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1546$764'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1543$763'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1540$762'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1537$761'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1534$760'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1531$759'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1530$758'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1527$757'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1526$756'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1523$755'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1520$754'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1517$753'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1514$752'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1513$751'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1510$750'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1509$749'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1506$748'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1505$747'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1502$746'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1501$745'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1498$744'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1497$743'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1494$742'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1493$741'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1490$740'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1489$739'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1486$738'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1485$737'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1482$736'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1481$735'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1478$734'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1477$733'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1474$732'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1473$731'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1470$730'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1469$729'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1466$728'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1465$727'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1462$726'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1461$725'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1458$724'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1457$723'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1454$722'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1453$721'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1450$720'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1449$719'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1446$718'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1445$717'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1442$716'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1441$715'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1438$714'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1437$713'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1434$712'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1433$711'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1430$710'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1429$709'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1426$708'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1425$707'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1422$706'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1421$705'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1418$704'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1417$703'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1414$702'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1413$701'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1410$700'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1409$699'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1406$698'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1405$697'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1402$696'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1401$695'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1398$694'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1397$693'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1394$692'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1393$691'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1390$690'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1389$689'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1386$688'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1385$687'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1382$686'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1381$685'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1378$684'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1377$683'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1374$682'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1373$681'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1370$680'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1369$679'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1366$678'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1365$677'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1362$676'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1359$675'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1356$674'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1353$673'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1350$672'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1347$671'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1344$670'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1341$669'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1338$668'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1335$667'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1334$666'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1331$665'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1330$664'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1327$663'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1326$662'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1323$661'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1322$660'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1319$659'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1318$658'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1315$657'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1314$656'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1311$655'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1310$654'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1307$653'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1306$652'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1303$651'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1302$650'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1299$649'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1298$648'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1295$647'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1294$646'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1291$645'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1290$644'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1287$643'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1286$642'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1283$641'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1282$640'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1279$639'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1276$638'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1273$637'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1272$636'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1269$635'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1268$634'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1265$633'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1262$632'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1259$631'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1258$630'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1255$629'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1252$628'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1251$627'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1248$626'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1245$625'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1244$624'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1241$623'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1238$622'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1237$621'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1234$620'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1231$619'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1230$618'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1227$617'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1224$616'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1223$615'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1220$614'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1217$613'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1214$612'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1213$611'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1210$610'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1209$609'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1206$608'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1203$607'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1200$606'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1197$605'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1194$604'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1191$603'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1188$602'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1185$601'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1184$600'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1183$599'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1182$598'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1179$597'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1178$596'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1177$595'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1176$594'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1173$593'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1172$592'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1171$591'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1170$590'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1167$589'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1164$588'.
Creating decoders for process `\cpu.$proc$out/warp-v_for_sram.sv:1163$587'.

4.8. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\cpu.\FETCH_Instr_Regs_pending_a2[1]' from process `\cpu.$proc$out/warp-v_for_sram.sv:0$1845'.
No latch inferred for signal `\cpu.\FETCH_Instr_Regs_pending_a2[2]' from process `\cpu.$proc$out/warp-v_for_sram.sv:0$1845'.
No latch inferred for signal `\cpu.\FETCH_Instr_Regs_pending_a2[3]' from process `\cpu.$proc$out/warp-v_for_sram.sv:0$1845'.
No latch inferred for signal `\cpu.\FETCH_Instr_Regs_pending_a2[4]' from process `\cpu.$proc$out/warp-v_for_sram.sv:0$1845'.
No latch inferred for signal `\cpu.\FETCH_Instr_Regs_pending_a2[5]' from process `\cpu.$proc$out/warp-v_for_sram.sv:0$1845'.
No latch inferred for signal `\cpu.\FETCH_Instr_Regs_pending_a2[6]' from process `\cpu.$proc$out/warp-v_for_sram.sv:0$1845'.
No latch inferred for signal `\cpu.\FETCH_Instr_Regs_pending_a2[7]' from process `\cpu.$proc$out/warp-v_for_sram.sv:0$1845'.
No latch inferred for signal `\cpu.\FETCH_Instr_Regs_pending_a2[8]' from process `\cpu.$proc$out/warp-v_for_sram.sv:0$1845'.
No latch inferred for signal `\cpu.\FETCH_Instr_Regs_pending_a2[9]' from process `\cpu.$proc$out/warp-v_for_sram.sv:0$1845'.
No latch inferred for signal `\cpu.\FETCH_Instr_Regs_pending_a2[10]' from process `\cpu.$proc$out/warp-v_for_sram.sv:0$1845'.
No latch inferred for signal `\cpu.\FETCH_Instr_Regs_pending_a2[11]' from process `\cpu.$proc$out/warp-v_for_sram.sv:0$1845'.
No latch inferred for signal `\cpu.\FETCH_Instr_Regs_pending_a2[12]' from process `\cpu.$proc$out/warp-v_for_sram.sv:0$1845'.
No latch inferred for signal `\cpu.\FETCH_Instr_Regs_pending_a2[13]' from process `\cpu.$proc$out/warp-v_for_sram.sv:0$1845'.
No latch inferred for signal `\cpu.\FETCH_Instr_Regs_pending_a2[14]' from process `\cpu.$proc$out/warp-v_for_sram.sv:0$1845'.
No latch inferred for signal `\cpu.\FETCH_Instr_Regs_pending_a2[15]' from process `\cpu.$proc$out/warp-v_for_sram.sv:0$1845'.
No latch inferred for signal `\cpu.\FETCH_Instr_Regs_pending_a2[16]' from process `\cpu.$proc$out/warp-v_for_sram.sv:0$1845'.
No latch inferred for signal `\cpu.\FETCH_Instr_Regs_pending_a2[17]' from process `\cpu.$proc$out/warp-v_for_sram.sv:0$1845'.
No latch inferred for signal `\cpu.\FETCH_Instr_Regs_pending_a2[18]' from process `\cpu.$proc$out/warp-v_for_sram.sv:0$1845'.
No latch inferred for signal `\cpu.\FETCH_Instr_Regs_pending_a2[19]' from process `\cpu.$proc$out/warp-v_for_sram.sv:0$1845'.
No latch inferred for signal `\cpu.\FETCH_Instr_Regs_pending_a2[20]' from process `\cpu.$proc$out/warp-v_for_sram.sv:0$1845'.
No latch inferred for signal `\cpu.\FETCH_Instr_Regs_pending_a2[21]' from process `\cpu.$proc$out/warp-v_for_sram.sv:0$1845'.
No latch inferred for signal `\cpu.\FETCH_Instr_Regs_pending_a2[22]' from process `\cpu.$proc$out/warp-v_for_sram.sv:0$1845'.
No latch inferred for signal `\cpu.\FETCH_Instr_Regs_pending_a2[23]' from process `\cpu.$proc$out/warp-v_for_sram.sv:0$1845'.
No latch inferred for signal `\cpu.\FETCH_Instr_Regs_pending_a2[24]' from process `\cpu.$proc$out/warp-v_for_sram.sv:0$1845'.
No latch inferred for signal `\cpu.\FETCH_Instr_Regs_pending_a2[25]' from process `\cpu.$proc$out/warp-v_for_sram.sv:0$1845'.
No latch inferred for signal `\cpu.\FETCH_Instr_Regs_pending_a2[26]' from process `\cpu.$proc$out/warp-v_for_sram.sv:0$1845'.
No latch inferred for signal `\cpu.\FETCH_Instr_Regs_pending_a2[27]' from process `\cpu.$proc$out/warp-v_for_sram.sv:0$1845'.
No latch inferred for signal `\cpu.\FETCH_Instr_Regs_pending_a2[28]' from process `\cpu.$proc$out/warp-v_for_sram.sv:0$1845'.
No latch inferred for signal `\cpu.\FETCH_Instr_Regs_pending_a2[29]' from process `\cpu.$proc$out/warp-v_for_sram.sv:0$1845'.
No latch inferred for signal `\cpu.\FETCH_Instr_Regs_pending_a2[30]' from process `\cpu.$proc$out/warp-v_for_sram.sv:0$1845'.
No latch inferred for signal `\cpu.\FETCH_Instr_Regs_pending_a2[31]' from process `\cpu.$proc$out/warp-v_for_sram.sv:0$1845'.
No latch inferred for signal `\cpu.\FETCH_Instr_Src_unconditioned_is_reg_a3[1]' from process `\cpu.$proc$out/warp-v_for_sram.sv:0$1845'.
No latch inferred for signal `\cpu.\FETCH_Instr_Src_unconditioned_is_reg_a3[2]' from process `\cpu.$proc$out/warp-v_for_sram.sv:0$1845'.
No latch inferred for signal `\cpu.\FETCH_Instr_Src_unconditioned_reg_a3[1]' from process `\cpu.$proc$out/warp-v_for_sram.sv:0$1845'.
No latch inferred for signal `\cpu.\FETCH_Instr_Src_unconditioned_reg_a3[2]' from process `\cpu.$proc$out/warp-v_for_sram.sv:0$1845'.
No latch inferred for signal `\cpu.\FETCH_Instr_Src_unconditioned_reg_value_a3[1]' from process `\cpu.$proc$out/warp-v_for_sram.sv:0$1845'.
No latch inferred for signal `\cpu.\FETCH_Instr_Src_unconditioned_reg_value_a3[2]' from process `\cpu.$proc$out/warp-v_for_sram.sv:0$1845'.
No latch inferred for signal `\cpu.$mem2reg_rd$\FETCH_Instr_Regs_pending_a3$out/warp-v_for_sram.sv:2658$583_DATA' from process `\cpu.$proc$out/warp-v_for_sram.sv:0$1842'.
No latch inferred for signal `\cpu.$mem2reg_rd$\FETCH_Instr_Regs_pending_a3$out/warp-v_for_sram.sv:2658$582_DATA' from process `\cpu.$proc$out/warp-v_for_sram.sv:0$1839'.
No latch inferred for signal `\cpu.$mem2reg_rd$\FETCH_Instr_Regs_pending_a3$out/warp-v_for_sram.sv:2673$581_DATA' from process `\cpu.$proc$out/warp-v_for_sram.sv:0$1836'.

4.9. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\cpu.\L1_MEM_Data_Src[2].L1_dummy_a4' using process `\cpu.$proc$out/warp-v_for_sram.sv:1797$1799'.
  created $dff cell `$procdff$2109' with positive edge clock.
Creating register for signal `\cpu.\L1_MEM_Data_Src[1].L1_dummy_a4' using process `\cpu.$proc$out/warp-v_for_sram.sv:1797$1798'.
  created $dff cell `$procdff$2110' with positive edge clock.
Creating register for signal `\cpu.\L1b_FETCH_Instr_Src[2].L1_reg_value_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1752$1797'.
  created $dff cell `$procdff$2111' with positive edge clock.
Creating register for signal `\cpu.\L1b_FETCH_Instr_Src[2].L1_reg_value_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1751$1796'.
  created $dff cell `$procdff$2112' with positive edge clock.
Creating register for signal `\cpu.\L1_FETCH_Instr_Src[2].L1_reg_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1748$1795'.
  created $dff cell `$procdff$2113' with positive edge clock.
Creating register for signal `\cpu.\L1_FETCH_Instr_Src[2].L1_reg_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1747$1794'.
  created $dff cell `$procdff$2114' with positive edge clock.
Creating register for signal `\cpu.\L1_FETCH_Instr_Src[2].L1_is_reg_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1744$1793'.
  created $dff cell `$procdff$2115' with positive edge clock.
Creating register for signal `\cpu.\L1_FETCH_Instr_Src[2].L1_is_reg_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1743$1792'.
  created $dff cell `$procdff$2116' with positive edge clock.
Creating register for signal `\cpu.\L1c_FETCH_Instr_Src[2].L1_dummy_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1740$1791'.
  created $dff cell `$procdff$2117' with positive edge clock.
Creating register for signal `\cpu.\L1c_FETCH_Instr_Src[2].L1_dummy_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1739$1790'.
  created $dff cell `$procdff$2118' with positive edge clock.
Creating register for signal `\cpu.\L1b_FETCH_Instr_Src[1].L1_reg_value_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1752$1789'.
  created $dff cell `$procdff$2119' with positive edge clock.
Creating register for signal `\cpu.\L1b_FETCH_Instr_Src[1].L1_reg_value_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1751$1788'.
  created $dff cell `$procdff$2120' with positive edge clock.
Creating register for signal `\cpu.\L1_FETCH_Instr_Src[1].L1_reg_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1748$1787'.
  created $dff cell `$procdff$2121' with positive edge clock.
Creating register for signal `\cpu.\L1_FETCH_Instr_Src[1].L1_reg_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1747$1786'.
  created $dff cell `$procdff$2122' with positive edge clock.
Creating register for signal `\cpu.\L1_FETCH_Instr_Src[1].L1_is_reg_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1744$1785'.
  created $dff cell `$procdff$2123' with positive edge clock.
Creating register for signal `\cpu.\L1_FETCH_Instr_Src[1].L1_is_reg_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1743$1784'.
  created $dff cell `$procdff$2124' with positive edge clock.
Creating register for signal `\cpu.\L1c_FETCH_Instr_Src[1].L1_dummy_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1740$1783'.
  created $dff cell `$procdff$2125' with positive edge clock.
Creating register for signal `\cpu.\L1c_FETCH_Instr_Src[1].L1_dummy_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1739$1782'.
  created $dff cell `$procdff$2126' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_Regs_pending_a3[31]' using process `\cpu.$proc$out/warp-v_for_sram.sv:1730$1781'.
  created $dff cell `$procdff$2127' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_Regs_pending_a3[30]' using process `\cpu.$proc$out/warp-v_for_sram.sv:1730$1780'.
  created $dff cell `$procdff$2128' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_Regs_pending_a3[29]' using process `\cpu.$proc$out/warp-v_for_sram.sv:1730$1779'.
  created $dff cell `$procdff$2129' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_Regs_pending_a3[28]' using process `\cpu.$proc$out/warp-v_for_sram.sv:1730$1778'.
  created $dff cell `$procdff$2130' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_Regs_pending_a3[27]' using process `\cpu.$proc$out/warp-v_for_sram.sv:1730$1777'.
  created $dff cell `$procdff$2131' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_Regs_pending_a3[26]' using process `\cpu.$proc$out/warp-v_for_sram.sv:1730$1776'.
  created $dff cell `$procdff$2132' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_Regs_pending_a3[25]' using process `\cpu.$proc$out/warp-v_for_sram.sv:1730$1775'.
  created $dff cell `$procdff$2133' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_Regs_pending_a3[24]' using process `\cpu.$proc$out/warp-v_for_sram.sv:1730$1774'.
  created $dff cell `$procdff$2134' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_Regs_pending_a3[23]' using process `\cpu.$proc$out/warp-v_for_sram.sv:1730$1773'.
  created $dff cell `$procdff$2135' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_Regs_pending_a3[22]' using process `\cpu.$proc$out/warp-v_for_sram.sv:1730$1772'.
  created $dff cell `$procdff$2136' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_Regs_pending_a3[21]' using process `\cpu.$proc$out/warp-v_for_sram.sv:1730$1771'.
  created $dff cell `$procdff$2137' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_Regs_pending_a3[20]' using process `\cpu.$proc$out/warp-v_for_sram.sv:1730$1770'.
  created $dff cell `$procdff$2138' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_Regs_pending_a3[19]' using process `\cpu.$proc$out/warp-v_for_sram.sv:1730$1769'.
  created $dff cell `$procdff$2139' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_Regs_pending_a3[18]' using process `\cpu.$proc$out/warp-v_for_sram.sv:1730$1768'.
  created $dff cell `$procdff$2140' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_Regs_pending_a3[17]' using process `\cpu.$proc$out/warp-v_for_sram.sv:1730$1767'.
  created $dff cell `$procdff$2141' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_Regs_pending_a3[16]' using process `\cpu.$proc$out/warp-v_for_sram.sv:1730$1766'.
  created $dff cell `$procdff$2142' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_Regs_pending_a3[15]' using process `\cpu.$proc$out/warp-v_for_sram.sv:1730$1765'.
  created $dff cell `$procdff$2143' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_Regs_pending_a3[14]' using process `\cpu.$proc$out/warp-v_for_sram.sv:1730$1764'.
  created $dff cell `$procdff$2144' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_Regs_pending_a3[13]' using process `\cpu.$proc$out/warp-v_for_sram.sv:1730$1763'.
  created $dff cell `$procdff$2145' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_Regs_pending_a3[12]' using process `\cpu.$proc$out/warp-v_for_sram.sv:1730$1762'.
  created $dff cell `$procdff$2146' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_Regs_pending_a3[11]' using process `\cpu.$proc$out/warp-v_for_sram.sv:1730$1761'.
  created $dff cell `$procdff$2147' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_Regs_pending_a3[10]' using process `\cpu.$proc$out/warp-v_for_sram.sv:1730$1760'.
  created $dff cell `$procdff$2148' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_Regs_pending_a3[9]' using process `\cpu.$proc$out/warp-v_for_sram.sv:1730$1759'.
  created $dff cell `$procdff$2149' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_Regs_pending_a3[8]' using process `\cpu.$proc$out/warp-v_for_sram.sv:1730$1758'.
  created $dff cell `$procdff$2150' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_Regs_pending_a3[7]' using process `\cpu.$proc$out/warp-v_for_sram.sv:1730$1757'.
  created $dff cell `$procdff$2151' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_Regs_pending_a3[6]' using process `\cpu.$proc$out/warp-v_for_sram.sv:1730$1756'.
  created $dff cell `$procdff$2152' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_Regs_pending_a3[5]' using process `\cpu.$proc$out/warp-v_for_sram.sv:1730$1755'.
  created $dff cell `$procdff$2153' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_Regs_pending_a3[4]' using process `\cpu.$proc$out/warp-v_for_sram.sv:1730$1754'.
  created $dff cell `$procdff$2154' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_Regs_pending_a3[3]' using process `\cpu.$proc$out/warp-v_for_sram.sv:1730$1753'.
  created $dff cell `$procdff$2155' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_Regs_pending_a3[2]' using process `\cpu.$proc$out/warp-v_for_sram.sv:1730$1752'.
  created $dff cell `$procdff$2156' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_Regs_pending_a3[1]' using process `\cpu.$proc$out/warp-v_for_sram.sv:1730$1751'.
  created $dff cell `$procdff$2157' with positive edge clock.
Creating register for signal `\cpu.\L1_FETCH_Instr_OrigInst_Src[2].L1_dummy_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1687$1750'.
  created $dff cell `$procdff$2158' with positive edge clock.
Creating register for signal `\cpu.\L1_FETCH_Instr_OrigInst_Src[2].L1_dummy_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1686$1749'.
  created $dff cell `$procdff$2159' with positive edge clock.
Creating register for signal `\cpu.\L1_FETCH_Instr_OrigInst_Src[2].L1_dummy_a1' using process `\cpu.$proc$out/warp-v_for_sram.sv:1685$1748'.
  created $dff cell `$procdff$2160' with positive edge clock.
Creating register for signal `\cpu.\L1_FETCH_Instr_OrigInst_Src[1].L1_dummy_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1687$1747'.
  created $dff cell `$procdff$2161' with positive edge clock.
Creating register for signal `\cpu.\L1_FETCH_Instr_OrigInst_Src[1].L1_dummy_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1686$1746'.
  created $dff cell `$procdff$2162' with positive edge clock.
Creating register for signal `\cpu.\L1_FETCH_Instr_OrigInst_Src[1].L1_dummy_a1' using process `\cpu.$proc$out/warp-v_for_sram.sv:1685$1745'.
  created $dff cell `$procdff$2163' with positive edge clock.
Creating register for signal `\cpu.$memwr$\FETCH_Instr_Regs_value_a3$out/warp-v_for_sram.sv:3403$584_ADDR' using process `\cpu.$proc$out/warp-v_for_sram.sv:3401$1660'.
  created $dff cell `$procdff$2164' with positive edge clock.
Creating register for signal `\cpu.$memwr$\FETCH_Instr_Regs_value_a3$out/warp-v_for_sram.sv:3403$584_DATA' using process `\cpu.$proc$out/warp-v_for_sram.sv:3401$1660'.
  created $dff cell `$procdff$2165' with positive edge clock.
Creating register for signal `\cpu.$memwr$\FETCH_Instr_Regs_value_a3$out/warp-v_for_sram.sv:3403$584_EN' using process `\cpu.$proc$out/warp-v_for_sram.sv:3401$1660'.
  created $dff cell `$procdff$2166' with positive edge clock.
Creating register for signal `\cpu.\MEM_Data_valid_ld_a4' using process `\cpu.$proc$out/warp-v_for_sram.sv:1789$845'.
  created $dff cell `$procdff$2167' with positive edge clock.
Creating register for signal `\cpu.\MEM_Data_spec_ld_a4' using process `\cpu.$proc$out/warp-v_for_sram.sv:1786$844'.
  created $dff cell `$procdff$2168' with positive edge clock.
Creating register for signal `\cpu.\MEM_Data_raw_funct3_a4' using process `\cpu.$proc$out/warp-v_for_sram.sv:1783$843'.
  created $dff cell `$procdff$2169' with positive edge clock.
Creating register for signal `\cpu.\MEM_Data_pc_a4' using process `\cpu.$proc$out/warp-v_for_sram.sv:1780$842'.
  created $dff cell `$procdff$2170' with positive edge clock.
Creating register for signal `\cpu.\MEM_Data_ld_st_word_a4' using process `\cpu.$proc$out/warp-v_for_sram.sv:1777$841'.
  created $dff cell `$procdff$2171' with positive edge clock.
Creating register for signal `\cpu.\MEM_Data_ld_st_half_a4' using process `\cpu.$proc$out/warp-v_for_sram.sv:1774$840'.
  created $dff cell `$procdff$2172' with positive edge clock.
Creating register for signal `\cpu.\MEM_Data_dest_reg_a4' using process `\cpu.$proc$out/warp-v_for_sram.sv:1771$839'.
  created $dff cell `$procdff$2173' with positive edge clock.
Creating register for signal `\cpu.\MEM_Data_addr_a4' using process `\cpu.$proc$out/warp-v_for_sram.sv:1768$838'.
  created $dff cell `$procdff$2174' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_OrigLoadInst_spec_ld_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1721$837'.
  created $dff cell `$procdff$2175' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_OrigLoadInst_spec_ld_a1' using process `\cpu.$proc$out/warp-v_for_sram.sv:1720$836'.
  created $dff cell `$procdff$2176' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_OrigLoadInst_raw_funct3_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1717$835'.
  created $dff cell `$procdff$2177' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_OrigLoadInst_raw_funct3_a1' using process `\cpu.$proc$out/warp-v_for_sram.sv:1716$834'.
  created $dff cell `$procdff$2178' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_OrigLoadInst_ld_value_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1713$833'.
  created $dff cell `$procdff$2179' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_OrigLoadInst_ld_value_a1' using process `\cpu.$proc$out/warp-v_for_sram.sv:1712$832'.
  created $dff cell `$procdff$2180' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_OrigLoadInst_ld_st_word_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1709$831'.
  created $dff cell `$procdff$2181' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_OrigLoadInst_ld_st_word_a1' using process `\cpu.$proc$out/warp-v_for_sram.sv:1708$830'.
  created $dff cell `$procdff$2182' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_OrigLoadInst_ld_st_half_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1705$829'.
  created $dff cell `$procdff$2183' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_OrigLoadInst_ld_st_half_a1' using process `\cpu.$proc$out/warp-v_for_sram.sv:1704$828'.
  created $dff cell `$procdff$2184' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_OrigLoadInst_addr_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1698$826'.
  created $dff cell `$procdff$2185' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_OrigLoadInst_addr_a1' using process `\cpu.$proc$out/warp-v_for_sram.sv:1697$825'.
  created $dff cell `$procdff$2186' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_OrigInst_pc_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1677$824'.
  created $dff cell `$procdff$2187' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_OrigInst_pc_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1676$823'.
  created $dff cell `$procdff$2188' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_OrigInst_pc_a1' using process `\cpu.$proc$out/warp-v_for_sram.sv:1675$822'.
  created $dff cell `$procdff$2189' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_OrigInst_dest_reg_a1' using process `\cpu.$proc$out/warp-v_for_sram.sv:1672$821'.
  created $dff cell `$procdff$2190' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_valid_st_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1664$820'.
  created $dff cell `$procdff$2191' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_valid_ld_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1661$819'.
  created $dff cell `$procdff$2192' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_valid_dest_reg_valid_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1658$818'.
  created $dff cell `$procdff$2193' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_valid_decode_branch_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1655$817'.
  created $dff cell `$procdff$2194' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_valid_decode_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1652$816'.
  created $dff cell `$procdff$2195' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_valid_decode_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1651$815'.
  created $dff cell `$procdff$2196' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_trap_target_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1648$814'.
  created $dff cell `$procdff$2197' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_st_value_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1645$813'.
  created $dff cell `$procdff$2198' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_st_mask_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1642$812'.
  created $dff cell `$procdff$2199' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_st_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1639$811'.
  created $dff cell `$procdff$2200' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_st_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1638$810'.
  created $dff cell `$procdff$2201' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_spec_ld_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1635$809'.
  created $dff cell `$procdff$2202' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_spec_ld_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1634$808'.
  created $dff cell `$procdff$2203' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_second_issue_ld_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1631$807'.
  created $dff cell `$procdff$2204' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_second_issue_ld_a1' using process `\cpu.$proc$out/warp-v_for_sram.sv:1630$806'.
  created $dff cell `$procdff$2205' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_second_issue_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1627$805'.
  created $dff cell `$procdff$2206' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_second_issue_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1626$804'.
  created $dff cell `$procdff$2207' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_second_issue_a1' using process `\cpu.$proc$out/warp-v_for_sram.sv:1625$803'.
  created $dff cell `$procdff$2208' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_rslt_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1622$802'.
  created $dff cell `$procdff$2209' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_reset_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1619$801'.
  created $dff cell `$procdff$2210' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_reset_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1618$800'.
  created $dff cell `$procdff$2211' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_reset_a1' using process `\cpu.$proc$out/warp-v_for_sram.sv:1617$799'.
  created $dff cell `$procdff$2212' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_reset_a0' using process `\cpu.$proc$out/warp-v_for_sram.sv:1616$798'.
  created $dff cell `$procdff$2213' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_replay_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1613$797'.
  created $dff cell `$procdff$2214' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_replay_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1612$796'.
  created $dff cell `$procdff$2215' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_reg_wr_pending_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1609$795'.
  created $dff cell `$procdff$2216' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_reg_wr_pending_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1608$794'.
  created $dff cell `$procdff$2217' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_raw_u_imm_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1605$793'.
  created $dff cell `$procdff$2218' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_raw_u_imm_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1604$792'.
  created $dff cell `$procdff$2219' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_raw_s_imm_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1601$791'.
  created $dff cell `$procdff$2220' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_raw_s_imm_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1600$790'.
  created $dff cell `$procdff$2221' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_raw_rs3_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1597$789'.
  created $dff cell `$procdff$2222' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_raw_rs3_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1596$788'.
  created $dff cell `$procdff$2223' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_raw_rs2_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1593$787'.
  created $dff cell `$procdff$2224' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_raw_rs2_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1592$786'.
  created $dff cell `$procdff$2225' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_raw_rs1_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1589$785'.
  created $dff cell `$procdff$2226' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_raw_rs1_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1588$784'.
  created $dff cell `$procdff$2227' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_raw_rd_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1585$783'.
  created $dff cell `$procdff$2228' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_raw_rd_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1584$782'.
  created $dff cell `$procdff$2229' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_raw_j_imm_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1581$781'.
  created $dff cell `$procdff$2230' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_raw_j_imm_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1580$780'.
  created $dff cell `$procdff$2231' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_raw_i_imm_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1577$779'.
  created $dff cell `$procdff$2232' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_raw_i_imm_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1576$778'.
  created $dff cell `$procdff$2233' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_raw_funct7_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1573$777'.
  created $dff cell `$procdff$2234' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_raw_funct7_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1572$776'.
  created $dff cell `$procdff$2235' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_raw_funct3_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1569$775'.
  created $dff cell `$procdff$2236' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_raw_funct3_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1568$774'.
  created $dff cell `$procdff$2237' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_raw_b_imm_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1565$773'.
  created $dff cell `$procdff$2238' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_raw_b_imm_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1564$772'.
  created $dff cell `$procdff$2239' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_pred_taken_branch_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1561$771'.
  created $dff cell `$procdff$2240' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_pred_taken_branch_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1560$770'.
  created $dff cell `$procdff$2241' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_pred_taken_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1557$769'.
  created $dff cell `$procdff$2242' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_pc_inc_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1554$768'.
  created $dff cell `$procdff$2243' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_pc_inc_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1553$767'.
  created $dff cell `$procdff$2244' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_pc_inc_a1' using process `\cpu.$proc$out/warp-v_for_sram.sv:1552$766'.
  created $dff cell `$procdff$2245' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_pc_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1549$765'.
  created $dff cell `$procdff$2246' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_non_pipelined_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1546$764'.
  created $dff cell `$procdff$2247' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_non_aborting_trap_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1543$763'.
  created $dff cell `$procdff$2248' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_mispred_branch_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1540$762'.
  created $dff cell `$procdff$2249' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_misaligned_pc_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1537$761'.
  created $dff cell `$procdff$2250' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_misaligned_jump_target_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1534$760'.
  created $dff cell `$procdff$2251' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_ld_st_word_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1531$759'.
  created $dff cell `$procdff$2252' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_ld_st_word_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1530$758'.
  created $dff cell `$procdff$2253' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_ld_st_half_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1527$757'.
  created $dff cell `$procdff$2254' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_ld_st_half_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1526$756'.
  created $dff cell `$procdff$2255' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_ld_st_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1523$755'.
  created $dff cell `$procdff$2256' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_ld_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1520$754'.
  created $dff cell `$procdff$2257' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_jump_target_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1517$753'.
  created $dff cell `$procdff$2258' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_jump_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1514$752'.
  created $dff cell `$procdff$2259' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_jump_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1513$751'.
  created $dff cell `$procdff$2260' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_is_xori_instr_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1510$750'.
  created $dff cell `$procdff$2261' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_is_xori_instr_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1509$749'.
  created $dff cell `$procdff$2262' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_is_xor_instr_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1506$748'.
  created $dff cell `$procdff$2263' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_is_xor_instr_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1505$747'.
  created $dff cell `$procdff$2264' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_is_u_type_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1502$746'.
  created $dff cell `$procdff$2265' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_is_u_type_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1501$745'.
  created $dff cell `$procdff$2266' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_is_sw_instr_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1498$744'.
  created $dff cell `$procdff$2267' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_is_sw_instr_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1497$743'.
  created $dff cell `$procdff$2268' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_is_sub_instr_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1494$742'.
  created $dff cell `$procdff$2269' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_is_sub_instr_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1493$741'.
  created $dff cell `$procdff$2270' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_is_srli_instr_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1490$740'.
  created $dff cell `$procdff$2271' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_is_srli_instr_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1489$739'.
  created $dff cell `$procdff$2272' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_is_srl_instr_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1486$738'.
  created $dff cell `$procdff$2273' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_is_srl_instr_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1485$737'.
  created $dff cell `$procdff$2274' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_is_srai_instr_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1482$736'.
  created $dff cell `$procdff$2275' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_is_srai_instr_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1481$735'.
  created $dff cell `$procdff$2276' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_is_sra_instr_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1478$734'.
  created $dff cell `$procdff$2277' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_is_sra_instr_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1477$733'.
  created $dff cell `$procdff$2278' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_is_sltu_instr_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1474$732'.
  created $dff cell `$procdff$2279' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_is_sltu_instr_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1473$731'.
  created $dff cell `$procdff$2280' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_is_sltiu_instr_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1470$730'.
  created $dff cell `$procdff$2281' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_is_sltiu_instr_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1469$729'.
  created $dff cell `$procdff$2282' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_is_slti_instr_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1466$728'.
  created $dff cell `$procdff$2283' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_is_slti_instr_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1465$727'.
  created $dff cell `$procdff$2284' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_is_slt_instr_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1462$726'.
  created $dff cell `$procdff$2285' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_is_slt_instr_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1461$725'.
  created $dff cell `$procdff$2286' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_is_slli_instr_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1458$724'.
  created $dff cell `$procdff$2287' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_is_slli_instr_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1457$723'.
  created $dff cell `$procdff$2288' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_is_sll_instr_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1454$722'.
  created $dff cell `$procdff$2289' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_is_sll_instr_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1453$721'.
  created $dff cell `$procdff$2290' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_is_sh_instr_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1450$720'.
  created $dff cell `$procdff$2291' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_is_sh_instr_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1449$719'.
  created $dff cell `$procdff$2292' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_is_sb_instr_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1446$718'.
  created $dff cell `$procdff$2293' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_is_sb_instr_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1445$717'.
  created $dff cell `$procdff$2294' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_is_s_type_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1442$716'.
  created $dff cell `$procdff$2295' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_is_s_type_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1441$715'.
  created $dff cell `$procdff$2296' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_is_r_type_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1438$714'.
  created $dff cell `$procdff$2297' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_is_r_type_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1437$713'.
  created $dff cell `$procdff$2298' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_is_ori_instr_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1434$712'.
  created $dff cell `$procdff$2299' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_is_ori_instr_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1433$711'.
  created $dff cell `$procdff$2300' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_is_or_instr_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1430$710'.
  created $dff cell `$procdff$2301' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_is_or_instr_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1429$709'.
  created $dff cell `$procdff$2302' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_is_lw_instr_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1426$708'.
  created $dff cell `$procdff$2303' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_is_lw_instr_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1425$707'.
  created $dff cell `$procdff$2304' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_is_lui_instr_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1422$706'.
  created $dff cell `$procdff$2305' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_is_lui_instr_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1421$705'.
  created $dff cell `$procdff$2306' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_is_lhu_instr_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1418$704'.
  created $dff cell `$procdff$2307' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_is_lhu_instr_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1417$703'.
  created $dff cell `$procdff$2308' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_is_lh_instr_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1414$702'.
  created $dff cell `$procdff$2309' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_is_lh_instr_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1413$701'.
  created $dff cell `$procdff$2310' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_is_lbu_instr_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1410$700'.
  created $dff cell `$procdff$2311' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_is_lbu_instr_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1409$699'.
  created $dff cell `$procdff$2312' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_is_lb_instr_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1406$698'.
  created $dff cell `$procdff$2313' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_is_lb_instr_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1405$697'.
  created $dff cell `$procdff$2314' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_is_jalr_instr_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1402$696'.
  created $dff cell `$procdff$2315' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_is_jalr_instr_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1401$695'.
  created $dff cell `$procdff$2316' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_is_jal_instr_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1398$694'.
  created $dff cell `$procdff$2317' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_is_jal_instr_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1397$693'.
  created $dff cell `$procdff$2318' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_is_j_type_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1394$692'.
  created $dff cell `$procdff$2319' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_is_j_type_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1393$691'.
  created $dff cell `$procdff$2320' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_is_i_type_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1390$690'.
  created $dff cell `$procdff$2321' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_is_i_type_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1389$689'.
  created $dff cell `$procdff$2322' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_is_csrrwi_instr_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1386$688'.
  created $dff cell `$procdff$2323' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_is_csrrwi_instr_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1385$687'.
  created $dff cell `$procdff$2324' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_is_csrrw_instr_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1382$686'.
  created $dff cell `$procdff$2325' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_is_csrrw_instr_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1381$685'.
  created $dff cell `$procdff$2326' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_is_csrrsi_instr_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1378$684'.
  created $dff cell `$procdff$2327' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_is_csrrsi_instr_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1377$683'.
  created $dff cell `$procdff$2328' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_is_csrrs_instr_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1374$682'.
  created $dff cell `$procdff$2329' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_is_csrrs_instr_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1373$681'.
  created $dff cell `$procdff$2330' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_is_csrrci_instr_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1370$680'.
  created $dff cell `$procdff$2331' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_is_csrrci_instr_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1369$679'.
  created $dff cell `$procdff$2332' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_is_csrrc_instr_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1366$678'.
  created $dff cell `$procdff$2333' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_is_csrrc_instr_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1365$677'.
  created $dff cell `$procdff$2334' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_is_csr_write_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1362$676'.
  created $dff cell `$procdff$2335' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_is_csr_timeh_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1359$675'.
  created $dff cell `$procdff$2336' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_is_csr_time_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1356$674'.
  created $dff cell `$procdff$2337' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_is_csr_set_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1353$673'.
  created $dff cell `$procdff$2338' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_is_csr_instreth_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1350$672'.
  created $dff cell `$procdff$2339' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_is_csr_instret_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1347$671'.
  created $dff cell `$procdff$2340' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_is_csr_cycleh_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1344$670'.
  created $dff cell `$procdff$2341' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_is_csr_cycle_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1341$669'.
  created $dff cell `$procdff$2342' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_is_csr_clear_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1338$668'.
  created $dff cell `$procdff$2343' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_is_bne_instr_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1335$667'.
  created $dff cell `$procdff$2344' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_is_bne_instr_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1334$666'.
  created $dff cell `$procdff$2345' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_is_bltu_instr_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1331$665'.
  created $dff cell `$procdff$2346' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_is_bltu_instr_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1330$664'.
  created $dff cell `$procdff$2347' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_is_blt_instr_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1327$663'.
  created $dff cell `$procdff$2348' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_is_blt_instr_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1326$662'.
  created $dff cell `$procdff$2349' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_is_bgeu_instr_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1323$661'.
  created $dff cell `$procdff$2350' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_is_bgeu_instr_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1322$660'.
  created $dff cell `$procdff$2351' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_is_bge_instr_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1319$659'.
  created $dff cell `$procdff$2352' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_is_bge_instr_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1318$658'.
  created $dff cell `$procdff$2353' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_is_beq_instr_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1315$657'.
  created $dff cell `$procdff$2354' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_is_beq_instr_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1314$656'.
  created $dff cell `$procdff$2355' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_is_b_type_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1311$655'.
  created $dff cell `$procdff$2356' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_is_b_type_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1310$654'.
  created $dff cell `$procdff$2357' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_is_auipc_instr_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1307$653'.
  created $dff cell `$procdff$2358' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_is_auipc_instr_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1306$652'.
  created $dff cell `$procdff$2359' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_is_andi_instr_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1303$651'.
  created $dff cell `$procdff$2360' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_is_andi_instr_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1302$650'.
  created $dff cell `$procdff$2361' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_is_and_instr_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1299$649'.
  created $dff cell `$procdff$2362' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_is_and_instr_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1298$648'.
  created $dff cell `$procdff$2363' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_is_addi_instr_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1295$647'.
  created $dff cell `$procdff$2364' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_is_addi_instr_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1294$646'.
  created $dff cell `$procdff$2365' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_is_add_instr_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1291$645'.
  created $dff cell `$procdff$2366' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_is_add_instr_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1290$644'.
  created $dff cell `$procdff$2367' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_indirect_jump_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1287$643'.
  created $dff cell `$procdff$2368' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_indirect_jump_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1286$642'.
  created $dff cell `$procdff$2369' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_illegal_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1283$641'.
  created $dff cell `$procdff$2370' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_illegal_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1282$640'.
  created $dff cell `$procdff$2371' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_fetch_a1' using process `\cpu.$proc$out/warp-v_for_sram.sv:1279$639'.
  created $dff cell `$procdff$2372' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_div_mul_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1276$638'.
  created $dff cell `$procdff$2373' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_dest_reg_valid_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1273$637'.
  created $dff cell `$procdff$2374' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_dest_reg_valid_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1272$636'.
  created $dff cell `$procdff$2375' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_dest_reg_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1269$635'.
  created $dff cell `$procdff$2376' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_dest_reg_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1268$634'.
  created $dff cell `$procdff$2377' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_csr_trap_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1265$633'.
  created $dff cell `$procdff$2378' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_csr_timeh_hw_wr_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1262$632'.
  created $dff cell `$procdff$2379' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_csr_timeh_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1259$631'.
  created $dff cell `$procdff$2380' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_csr_timeh_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1258$630'.
  created $dff cell `$procdff$2381' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_csr_time_hw_wr_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1255$629'.
  created $dff cell `$procdff$2382' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_csr_time_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1252$628'.
  created $dff cell `$procdff$2383' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_csr_time_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1251$627'.
  created $dff cell `$procdff$2384' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_csr_instreth_hw_wr_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1248$626'.
  created $dff cell `$procdff$2385' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_csr_instreth_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1245$625'.
  created $dff cell `$procdff$2386' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_csr_instreth_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1244$624'.
  created $dff cell `$procdff$2387' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_csr_instret_hw_wr_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1241$623'.
  created $dff cell `$procdff$2388' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_csr_instret_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1238$622'.
  created $dff cell `$procdff$2389' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_csr_instret_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1237$621'.
  created $dff cell `$procdff$2390' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_csr_cycleh_hw_wr_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1234$620'.
  created $dff cell `$procdff$2391' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_csr_cycleh_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1231$619'.
  created $dff cell `$procdff$2392' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_csr_cycleh_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1230$618'.
  created $dff cell `$procdff$2393' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_csr_cycle_hw_wr_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1227$617'.
  created $dff cell `$procdff$2394' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_csr_cycle_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1224$616'.
  created $dff cell `$procdff$2395' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_csr_cycle_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1223$615'.
  created $dff cell `$procdff$2396' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_conditional_branch_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1220$614'.
  created $dff cell `$procdff$2397' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_commit_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1217$613'.
  created $dff cell `$procdff$2398' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_bypass_avail2_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1214$612'.
  created $dff cell `$procdff$2399' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_bypass_avail2_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1213$611'.
  created $dff cell `$procdff$2400' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_bypass_avail1_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1210$610'.
  created $dff cell `$procdff$2401' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_bypass_avail1_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1209$609'.
  created $dff cell `$procdff$2402' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_branch_target_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1206$608'.
  created $dff cell `$procdff$2403' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_branch_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1203$607'.
  created $dff cell `$procdff$2404' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_addr_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1200$606'.
  created $dff cell `$procdff$2405' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_aborting_trap_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1197$605'.
  created $dff cell `$procdff$2406' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_RemainingCyclesWithinTimeUnit_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1194$604'.
  created $dff cell `$procdff$2407' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_Reg11Became13_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1191$603'.
  created $dff cell `$procdff$2408' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_ReachedEnd_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1188$602'.
  created $dff cell `$procdff$2409' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_Pc_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1185$601'.
  created $dff cell `$procdff$2410' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_Pc_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1184$600'.
  created $dff cell `$procdff$2411' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_Pc_a1' using process `\cpu.$proc$out/warp-v_for_sram.sv:1183$599'.
  created $dff cell `$procdff$2412' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_Pc_a0' using process `\cpu.$proc$out/warp-v_for_sram.sv:1182$598'.
  created $dff cell `$procdff$2413' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_NoFetch_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1179$597'.
  created $dff cell `$procdff$2414' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_NoFetch_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1178$596'.
  created $dff cell `$procdff$2415' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_NoFetch_a1' using process `\cpu.$proc$out/warp-v_for_sram.sv:1177$595'.
  created $dff cell `$procdff$2416' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_NoFetch_a0' using process `\cpu.$proc$out/warp-v_for_sram.sv:1176$594'.
  created $dff cell `$procdff$2417' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_GoodPathMask_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1173$593'.
  created $dff cell `$procdff$2418' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_GoodPathMask_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1172$592'.
  created $dff cell `$procdff$2419' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_GoodPathMask_a1' using process `\cpu.$proc$out/warp-v_for_sram.sv:1171$591'.
  created $dff cell `$procdff$2420' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_GoodPathMask_a0' using process `\cpu.$proc$out/warp-v_for_sram.sv:1170$590'.
  created $dff cell `$procdff$2421' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_Cnt_n1' using process `\cpu.$proc$out/warp-v_for_sram.sv:1167$589'.
  created $dff cell `$procdff$2422' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_BranchState_a3' using process `\cpu.$proc$out/warp-v_for_sram.sv:1164$588'.
  created $dff cell `$procdff$2423' with positive edge clock.
Creating register for signal `\cpu.\FETCH_Instr_BranchState_a2' using process `\cpu.$proc$out/warp-v_for_sram.sv:1163$587'.
  created $dff cell `$procdff$2424' with positive edge clock.

4.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

4.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:0$1845'.
Found and cleaned up 1 empty switch in `\cpu.$proc$out/warp-v_for_sram.sv:0$1842'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:0$1842'.
Found and cleaned up 1 empty switch in `\cpu.$proc$out/warp-v_for_sram.sv:0$1839'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:0$1839'.
Found and cleaned up 1 empty switch in `\cpu.$proc$out/warp-v_for_sram.sv:0$1836'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:0$1836'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1797$1799'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1797$1798'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1752$1797'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1751$1796'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1748$1795'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1747$1794'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1744$1793'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1743$1792'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1740$1791'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1739$1790'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1752$1789'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1751$1788'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1748$1787'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1747$1786'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1744$1785'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1743$1784'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1740$1783'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1739$1782'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1730$1781'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1730$1780'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1730$1779'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1730$1778'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1730$1777'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1730$1776'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1730$1775'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1730$1774'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1730$1773'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1730$1772'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1730$1771'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1730$1770'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1730$1769'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1730$1768'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1730$1767'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1730$1766'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1730$1765'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1730$1764'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1730$1763'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1730$1762'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1730$1761'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1730$1760'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1730$1759'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1730$1758'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1730$1757'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1730$1756'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1730$1755'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1730$1754'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1730$1753'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1730$1752'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1730$1751'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1687$1750'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1686$1749'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1685$1748'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1687$1747'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1686$1746'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1685$1745'.
Found and cleaned up 1 empty switch in `\cpu.$proc$out/warp-v_for_sram.sv:3401$1660'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:3401$1660'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1789$845'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1786$844'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1783$843'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1780$842'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1777$841'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1774$840'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1771$839'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1768$838'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1721$837'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1720$836'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1717$835'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1716$834'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1713$833'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1712$832'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1709$831'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1708$830'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1705$829'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1704$828'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1698$826'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1697$825'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1677$824'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1676$823'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1675$822'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1672$821'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1664$820'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1661$819'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1658$818'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1655$817'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1652$816'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1651$815'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1648$814'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1645$813'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1642$812'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1639$811'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1638$810'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1635$809'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1634$808'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1631$807'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1630$806'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1627$805'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1626$804'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1625$803'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1622$802'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1619$801'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1618$800'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1617$799'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1616$798'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1613$797'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1612$796'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1609$795'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1608$794'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1605$793'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1604$792'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1601$791'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1600$790'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1597$789'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1596$788'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1593$787'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1592$786'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1589$785'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1588$784'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1585$783'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1584$782'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1581$781'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1580$780'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1577$779'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1576$778'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1573$777'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1572$776'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1569$775'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1568$774'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1565$773'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1564$772'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1561$771'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1560$770'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1557$769'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1554$768'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1553$767'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1552$766'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1549$765'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1546$764'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1543$763'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1540$762'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1537$761'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1534$760'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1531$759'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1530$758'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1527$757'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1526$756'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1523$755'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1520$754'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1517$753'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1514$752'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1513$751'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1510$750'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1509$749'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1506$748'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1505$747'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1502$746'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1501$745'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1498$744'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1497$743'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1494$742'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1493$741'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1490$740'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1489$739'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1486$738'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1485$737'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1482$736'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1481$735'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1478$734'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1477$733'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1474$732'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1473$731'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1470$730'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1469$729'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1466$728'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1465$727'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1462$726'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1461$725'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1458$724'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1457$723'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1454$722'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1453$721'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1450$720'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1449$719'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1446$718'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1445$717'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1442$716'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1441$715'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1438$714'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1437$713'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1434$712'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1433$711'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1430$710'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1429$709'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1426$708'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1425$707'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1422$706'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1421$705'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1418$704'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1417$703'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1414$702'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1413$701'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1410$700'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1409$699'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1406$698'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1405$697'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1402$696'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1401$695'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1398$694'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1397$693'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1394$692'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1393$691'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1390$690'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1389$689'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1386$688'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1385$687'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1382$686'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1381$685'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1378$684'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1377$683'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1374$682'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1373$681'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1370$680'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1369$679'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1366$678'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1365$677'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1362$676'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1359$675'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1356$674'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1353$673'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1350$672'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1347$671'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1344$670'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1341$669'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1338$668'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1335$667'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1334$666'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1331$665'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1330$664'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1327$663'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1326$662'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1323$661'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1322$660'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1319$659'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1318$658'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1315$657'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1314$656'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1311$655'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1310$654'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1307$653'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1306$652'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1303$651'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1302$650'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1299$649'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1298$648'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1295$647'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1294$646'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1291$645'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1290$644'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1287$643'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1286$642'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1283$641'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1282$640'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1279$639'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1276$638'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1273$637'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1272$636'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1269$635'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1268$634'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1265$633'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1262$632'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1259$631'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1258$630'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1255$629'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1252$628'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1251$627'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1248$626'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1245$625'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1244$624'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1241$623'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1238$622'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1237$621'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1234$620'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1231$619'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1230$618'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1227$617'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1224$616'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1223$615'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1220$614'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1217$613'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1214$612'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1213$611'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1210$610'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1209$609'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1206$608'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1203$607'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1200$606'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1197$605'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1194$604'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1191$603'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1188$602'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1185$601'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1184$600'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1183$599'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1182$598'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1179$597'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1178$596'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1177$595'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1176$594'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1173$593'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1172$592'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1171$591'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1170$590'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1167$589'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1164$588'.
Removing empty process `cpu.$proc$out/warp-v_for_sram.sv:1163$587'.
Cleaned up 4 empty switches.

4.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module cpu.
<suppressed ~147 debug messages>
Removed 214 unused cells and 889 unused wires.

5. Executing SYNTH pass.

5.1. Executing HIERARCHY pass (managing design hierarchy).

5.1.1. Analyzing design hierarchy..
Top module:  \cpu

5.1.2. Analyzing design hierarchy..
Top module:  \cpu
Removed 0 unused modules.

5.2. Executing PROC pass (convert processes to netlists).

5.2.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

5.2.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

5.2.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

5.2.4. Executing PROC_INIT pass (extract init attributes).

5.2.5. Executing PROC_ARST pass (detect async resets in processes).

5.2.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

5.2.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

5.2.8. Executing PROC_DLATCH pass (convert process syncs to latches).

5.2.9. Executing PROC_DFF pass (convert process syncs to FFs).

5.2.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

5.2.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

5.2.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module cpu.

5.3. Executing OPT_EXPR pass (perform const folding).
Optimizing module cpu.

5.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cpu..
Removed 0 unused cells and 17 unused wires.
<suppressed ~17 debug messages>

5.5. Executing CHECK pass (checking for obvious problems).
Checking module cpu...
Warning: Wire cpu.\FETCH_Instr_Regs_pending_a3[0] is used but has no driver.
Found and reported 1 problems.

5.6. Executing OPT pass (performing simple optimizations).

5.6.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module cpu.

5.6.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cpu'.
<suppressed ~561 debug messages>
Removed a total of 187 cells.

5.6.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cpu..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 32/33 on $pmux $procmux$2001.
    dead port 32/33 on $pmux $procmux$2034.
    dead port 32/33 on $pmux $procmux$2067.
Removed 3 multiplexer ports.
<suppressed ~75 debug messages>

5.6.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cpu.
    Consolidated identical input bits for $mux cell $procmux$2101:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$0$memwr$\FETCH_Instr_Regs_value_a3$out/warp-v_for_sram.sv:3403$584_EN[31:0]$1663
      New ports: A=1'0, B=1'1, Y=$0$memwr$\FETCH_Instr_Regs_value_a3$out/warp-v_for_sram.sv:3403$584_EN[31:0]$1663 [0]
      New connections: $0$memwr$\FETCH_Instr_Regs_value_a3$out/warp-v_for_sram.sv:3403$584_EN[31:0]$1663 [31:1] = { $0$memwr$\FETCH_Instr_Regs_value_a3$out/warp-v_for_sram.sv:3403$584_EN[31:0]$1663 [0] $0$memwr$\FETCH_Instr_Regs_value_a3$out/warp-v_for_sram.sv:3403$584_EN[31:0]$1663 [0] $0$memwr$\FETCH_Instr_Regs_value_a3$out/warp-v_for_sram.sv:3403$584_EN[31:0]$1663 [0] $0$memwr$\FETCH_Instr_Regs_value_a3$out/warp-v_for_sram.sv:3403$584_EN[31:0]$1663 [0] $0$memwr$\FETCH_Instr_Regs_value_a3$out/warp-v_for_sram.sv:3403$584_EN[31:0]$1663 [0] $0$memwr$\FETCH_Instr_Regs_value_a3$out/warp-v_for_sram.sv:3403$584_EN[31:0]$1663 [0] $0$memwr$\FETCH_Instr_Regs_value_a3$out/warp-v_for_sram.sv:3403$584_EN[31:0]$1663 [0] $0$memwr$\FETCH_Instr_Regs_value_a3$out/warp-v_for_sram.sv:3403$584_EN[31:0]$1663 [0] $0$memwr$\FETCH_Instr_Regs_value_a3$out/warp-v_for_sram.sv:3403$584_EN[31:0]$1663 [0] $0$memwr$\FETCH_Instr_Regs_value_a3$out/warp-v_for_sram.sv:3403$584_EN[31:0]$1663 [0] $0$memwr$\FETCH_Instr_Regs_value_a3$out/warp-v_for_sram.sv:3403$584_EN[31:0]$1663 [0] $0$memwr$\FETCH_Instr_Regs_value_a3$out/warp-v_for_sram.sv:3403$584_EN[31:0]$1663 [0] $0$memwr$\FETCH_Instr_Regs_value_a3$out/warp-v_for_sram.sv:3403$584_EN[31:0]$1663 [0] $0$memwr$\FETCH_Instr_Regs_value_a3$out/warp-v_for_sram.sv:3403$584_EN[31:0]$1663 [0] $0$memwr$\FETCH_Instr_Regs_value_a3$out/warp-v_for_sram.sv:3403$584_EN[31:0]$1663 [0] $0$memwr$\FETCH_Instr_Regs_value_a3$out/warp-v_for_sram.sv:3403$584_EN[31:0]$1663 [0] $0$memwr$\FETCH_Instr_Regs_value_a3$out/warp-v_for_sram.sv:3403$584_EN[31:0]$1663 [0] $0$memwr$\FETCH_Instr_Regs_value_a3$out/warp-v_for_sram.sv:3403$584_EN[31:0]$1663 [0] $0$memwr$\FETCH_Instr_Regs_value_a3$out/warp-v_for_sram.sv:3403$584_EN[31:0]$1663 [0] $0$memwr$\FETCH_Instr_Regs_value_a3$out/warp-v_for_sram.sv:3403$584_EN[31:0]$1663 [0] $0$memwr$\FETCH_Instr_Regs_value_a3$out/warp-v_for_sram.sv:3403$584_EN[31:0]$1663 [0] $0$memwr$\FETCH_Instr_Regs_value_a3$out/warp-v_for_sram.sv:3403$584_EN[31:0]$1663 [0] $0$memwr$\FETCH_Instr_Regs_value_a3$out/warp-v_for_sram.sv:3403$584_EN[31:0]$1663 [0] $0$memwr$\FETCH_Instr_Regs_value_a3$out/warp-v_for_sram.sv:3403$584_EN[31:0]$1663 [0] $0$memwr$\FETCH_Instr_Regs_value_a3$out/warp-v_for_sram.sv:3403$584_EN[31:0]$1663 [0] $0$memwr$\FETCH_Instr_Regs_value_a3$out/warp-v_for_sram.sv:3403$584_EN[31:0]$1663 [0] $0$memwr$\FETCH_Instr_Regs_value_a3$out/warp-v_for_sram.sv:3403$584_EN[31:0]$1663 [0] $0$memwr$\FETCH_Instr_Regs_value_a3$out/warp-v_for_sram.sv:3403$584_EN[31:0]$1663 [0] $0$memwr$\FETCH_Instr_Regs_value_a3$out/warp-v_for_sram.sv:3403$584_EN[31:0]$1663 [0] $0$memwr$\FETCH_Instr_Regs_value_a3$out/warp-v_for_sram.sv:3403$584_EN[31:0]$1663 [0] $0$memwr$\FETCH_Instr_Regs_value_a3$out/warp-v_for_sram.sv:3403$584_EN[31:0]$1663 [0] }
  Optimizing cells in module \cpu.
Performed a total of 1 changes.

5.6.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cpu'.
Removed a total of 0 cells.

5.6.6. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 1-bit at position 0 on $procdff$2197 ($dff) from module cpu.
Setting constant 1-bit at position 1 on $procdff$2197 ($dff) from module cpu.
Setting constant 1-bit at position 2 on $procdff$2197 ($dff) from module cpu.
Setting constant 1-bit at position 3 on $procdff$2197 ($dff) from module cpu.
Setting constant 1-bit at position 4 on $procdff$2197 ($dff) from module cpu.
Setting constant 1-bit at position 5 on $procdff$2197 ($dff) from module cpu.
Setting constant 1-bit at position 6 on $procdff$2197 ($dff) from module cpu.
Setting constant 1-bit at position 7 on $procdff$2197 ($dff) from module cpu.
Setting constant 1-bit at position 8 on $procdff$2197 ($dff) from module cpu.
Setting constant 1-bit at position 9 on $procdff$2197 ($dff) from module cpu.
Setting constant 1-bit at position 10 on $procdff$2197 ($dff) from module cpu.
Setting constant 1-bit at position 11 on $procdff$2197 ($dff) from module cpu.
Setting constant 1-bit at position 12 on $procdff$2197 ($dff) from module cpu.
Setting constant 1-bit at position 13 on $procdff$2197 ($dff) from module cpu.
Setting constant 1-bit at position 14 on $procdff$2197 ($dff) from module cpu.
Setting constant 1-bit at position 15 on $procdff$2197 ($dff) from module cpu.
Setting constant 1-bit at position 16 on $procdff$2197 ($dff) from module cpu.
Setting constant 1-bit at position 17 on $procdff$2197 ($dff) from module cpu.
Setting constant 1-bit at position 18 on $procdff$2197 ($dff) from module cpu.
Setting constant 1-bit at position 19 on $procdff$2197 ($dff) from module cpu.
Setting constant 1-bit at position 20 on $procdff$2197 ($dff) from module cpu.
Setting constant 1-bit at position 21 on $procdff$2197 ($dff) from module cpu.
Setting constant 1-bit at position 22 on $procdff$2197 ($dff) from module cpu.
Setting constant 1-bit at position 23 on $procdff$2197 ($dff) from module cpu.
Setting constant 1-bit at position 24 on $procdff$2197 ($dff) from module cpu.
Setting constant 1-bit at position 25 on $procdff$2197 ($dff) from module cpu.
Setting constant 1-bit at position 26 on $procdff$2197 ($dff) from module cpu.
Setting constant 1-bit at position 27 on $procdff$2197 ($dff) from module cpu.
Setting constant 1-bit at position 28 on $procdff$2197 ($dff) from module cpu.
Setting constant 1-bit at position 29 on $procdff$2197 ($dff) from module cpu.
Setting constant 0-bit at position 0 on $procdff$2219 ($dff) from module cpu.
Setting constant 0-bit at position 1 on $procdff$2219 ($dff) from module cpu.
Setting constant 0-bit at position 2 on $procdff$2219 ($dff) from module cpu.
Setting constant 0-bit at position 3 on $procdff$2219 ($dff) from module cpu.
Setting constant 0-bit at position 4 on $procdff$2219 ($dff) from module cpu.
Setting constant 0-bit at position 5 on $procdff$2219 ($dff) from module cpu.
Setting constant 0-bit at position 6 on $procdff$2219 ($dff) from module cpu.
Setting constant 0-bit at position 7 on $procdff$2219 ($dff) from module cpu.
Setting constant 0-bit at position 8 on $procdff$2219 ($dff) from module cpu.
Setting constant 0-bit at position 9 on $procdff$2219 ($dff) from module cpu.
Setting constant 0-bit at position 10 on $procdff$2219 ($dff) from module cpu.
Setting constant 0-bit at position 11 on $procdff$2219 ($dff) from module cpu.
Setting constant 0-bit at position 0 on $procdff$2373 ($dff) from module cpu.

5.6.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cpu..
Removed 0 unused cells and 181 unused wires.
<suppressed ~2 debug messages>

5.6.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module cpu.

5.6.9. Rerunning OPT passes. (Maybe there is more to do..)

5.6.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cpu..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~75 debug messages>

5.6.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cpu.
Performed a total of 0 changes.

5.6.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cpu'.
Removed a total of 0 cells.

5.6.13. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $procdff$2247 ($dff) from module cpu.

5.6.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cpu..

5.6.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module cpu.
<suppressed ~5 debug messages>

5.6.16. Rerunning OPT passes. (Maybe there is more to do..)

5.6.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cpu..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~74 debug messages>

5.6.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cpu.
Performed a total of 0 changes.

5.6.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cpu'.
Removed a total of 0 cells.

5.6.20. Executing OPT_DFF pass (perform DFF optimizations).

5.6.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cpu..
Removed 3 unused cells and 8 unused wires.
<suppressed ~7 debug messages>

5.6.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module cpu.

5.6.23. Rerunning OPT passes. (Maybe there is more to do..)

5.6.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cpu..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~74 debug messages>

5.6.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cpu.
Performed a total of 0 changes.

5.6.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cpu'.
Removed a total of 0 cells.

5.6.27. Executing OPT_DFF pass (perform DFF optimizations).

5.6.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cpu..

5.6.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module cpu.

5.6.30. Finished OPT passes. (There is nothing left to do.)

5.7. Executing FSM pass (extract and optimize FSM).

5.7.1. Executing FSM_DETECT pass (finding FSMs in design).

5.7.2. Executing FSM_EXTRACT pass (extracting FSM from design).

5.7.3. Executing FSM_OPT pass (simple optimizations of FSMs).

5.7.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cpu..

5.7.5. Executing FSM_OPT pass (simple optimizations of FSMs).

5.7.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

5.7.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

5.7.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

5.8. Executing OPT pass (performing simple optimizations).

5.8.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module cpu.

5.8.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cpu'.
Removed a total of 0 cells.

5.8.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cpu..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~74 debug messages>

5.8.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cpu.
Performed a total of 0 changes.

5.8.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cpu'.
Removed a total of 0 cells.

5.8.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $procdff$2424 ($dff) from module cpu (D = \w_FETCH_Instr_BranchState_a1, Q = \FETCH_Instr_BranchState_a2).
Adding SRST signal on $auto$ff.cc:266:slice$2427 ($dffe) from module cpu (D = $ternary$out/warp-v_for_sram.sv:2605$1301_Y, Q = \FETCH_Instr_BranchState_a2, rval = 2'01).
Adding SRST signal on $procdff$2422 ($dff) from module cpu (D = $ternary$out/warp-v_for_sram.sv:2242$849_Y, Q = \FETCH_Instr_Cnt_n1, rval = 8'00000000).
Adding SRST signal on $procdff$2421 ($dff) from module cpu (D = \FETCH_Instr_next_good_path_mask_a0 [4:1], Q = \FETCH_Instr_GoodPathMask_a0 [4:1], rval = 4'0000).
Adding SRST signal on $procdff$2417 ($dff) from module cpu (D = $ternary$out/warp-v_for_sram.sv:2418$987_Y [0], Q = \FETCH_Instr_NoFetch_a0, rval = 1'0).
Adding SRST signal on $procdff$2409 ($dff) from module cpu (D = $logic_or$out/warp-v_for_sram.sv:3550$1728_Y, Q = \FETCH_Instr_ReachedEnd_a3, rval = 1'0).
Adding SRST signal on $procdff$2408 ($dff) from module cpu (D = $logic_or$out/warp-v_for_sram.sv:3551$1733_Y, Q = \FETCH_Instr_Reg11Became13_a3, rval = 1'0).
Adding SRST signal on $procdff$2407 ($dff) from module cpu (D = $sub$out/warp-v_for_sram.sv:3112$1513_Y, Q = \FETCH_Instr_RemainingCyclesWithinTimeUnit_a2, rval = 30'111011100110101100100111111111).
Adding SRST signal on $procdff$2396 ($dff) from module cpu (D = $ternary$out/warp-v_for_sram.sv:2863$1404_Y, Q = \FETCH_Instr_csr_cycle_a2, rval = 0).
Adding SRST signal on $procdff$2393 ($dff) from module cpu (D = $ternary$out/warp-v_for_sram.sv:2906$1425_Y, Q = \FETCH_Instr_csr_cycleh_a2, rval = 0).
Adding SRST signal on $procdff$2390 ($dff) from module cpu (D = $ternary$out/warp-v_for_sram.sv:3035$1488_Y, Q = \FETCH_Instr_csr_instret_a2, rval = 0).
Adding SRST signal on $procdff$2387 ($dff) from module cpu (D = $ternary$out/warp-v_for_sram.sv:3078$1509_Y, Q = \FETCH_Instr_csr_instreth_a2, rval = 0).
Adding SRST signal on $procdff$2384 ($dff) from module cpu (D = $ternary$out/warp-v_for_sram.sv:2949$1446_Y, Q = \FETCH_Instr_csr_time_a2, rval = 0).
Adding SRST signal on $procdff$2381 ($dff) from module cpu (D = $ternary$out/warp-v_for_sram.sv:2992$1467_Y, Q = \FETCH_Instr_csr_timeh_a2, rval = 0).
Adding SRST signal on $procdff$2199 ($dff) from module cpu (D = $ternary$out/warp-v_for_sram.sv:3175$1532_Y, Q = \FETCH_Instr_st_mask_a3, rval = 4'1111).
Adding SRST signal on $procdff$2120 ($dff) from module cpu (D = $ternary$out/warp-v_for_sram.sv:2655$1822_Y [32:1], Q = \L1b_FETCH_Instr_Src[1].L1_reg_value_a2, rval = 0).
Adding SRST signal on $procdff$2112 ($dff) from module cpu (D = $ternary$out/warp-v_for_sram.sv:2655$1833_Y [32:1], Q = \L1b_FETCH_Instr_Src[2].L1_reg_value_a2, rval = 0).

5.8.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cpu..
Removed 13 unused cells and 13 unused wires.
<suppressed ~26 debug messages>

5.8.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module cpu.

5.8.9. Rerunning OPT passes. (Maybe there is more to do..)

5.8.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cpu..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~74 debug messages>

5.8.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cpu.
Performed a total of 0 changes.

5.8.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cpu'.
Removed a total of 0 cells.

5.8.13. Executing OPT_DFF pass (perform DFF optimizations).

5.8.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cpu..

5.8.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module cpu.

5.8.16. Finished OPT passes. (There is nothing left to do.)

5.9. Executing WREDUCE pass (reducing word size of cells).
Removed top 27 address bits (of 32) from memory read port cpu.$memrd$\FETCH_Instr_Regs_value_a3$out/warp-v_for_sram.sv:3551$1730 (FETCH_Instr_Regs_value_a3).
Removed top 7 bits (of 8) from port B of cell cpu.$add$out/warp-v_for_sram.sv:2243$848 ($add).
Removed top 28 bits (of 32) from port B of cell cpu.$lt$out/warp-v_for_sram.sv:2244$851 ($lt).
Removed top 3 bits (of 4) from mux cell cpu.$ternary$out/warp-v_for_sram.sv:2358$858 ($mux).
Removed top 3 bits (of 4) from mux cell cpu.$ternary$out/warp-v_for_sram.sv:2358$864 ($mux).
Removed top 3 bits (of 4) from mux cell cpu.$ternary$out/warp-v_for_sram.sv:2358$871 ($mux).
Removed top 1 bits (of 4) from mux cell cpu.$ternary$out/warp-v_for_sram.sv:2358$878 ($mux).
Removed top 2 bits (of 4) from mux cell cpu.$ternary$out/warp-v_for_sram.sv:2358$886 ($mux).
Removed top 2 bits (of 4) from mux cell cpu.$ternary$out/warp-v_for_sram.sv:2358$894 ($mux).
Removed top 2 bits (of 4) from mux cell cpu.$ternary$out/warp-v_for_sram.sv:2358$902 ($mux).
Removed top 1 bits (of 4) from mux cell cpu.$ternary$out/warp-v_for_sram.sv:2358$927 ($mux).
Removed top 4 bits (of 5) from mux cell cpu.$ternary$out/warp-v_for_sram.sv:2362$929 ($mux).
Removed top 29 bits (of 30) from port B of cell cpu.$add$out/warp-v_for_sram.sv:2413$932 ($add).
Removed top 3 bits (of 32) from port A of cell cpu.$shr$out/warp-v_for_sram.sv:2462$998 ($shr).
Removed top 31 bits (of 32) from port Y of cell cpu.$shr$out/warp-v_for_sram.sv:2462$998 ($shr).
Removed top 11 bits (of 32) from port A of cell cpu.$shr$out/warp-v_for_sram.sv:2462$1001 ($shr).
Removed top 31 bits (of 32) from port Y of cell cpu.$shr$out/warp-v_for_sram.sv:2462$1001 ($shr).
Removed top 31 bits (of 32) from port A of cell cpu.$shr$out/warp-v_for_sram.sv:2462$1004 ($shr).
Removed top 31 bits (of 32) from port Y of cell cpu.$shr$out/warp-v_for_sram.sv:2462$1004 ($shr).
Removed top 12 bits (of 32) from port A of cell cpu.$shr$out/warp-v_for_sram.sv:2462$1007 ($shr).
Removed top 31 bits (of 32) from port Y of cell cpu.$shr$out/warp-v_for_sram.sv:2462$1007 ($shr).
Removed top 22 bits (of 32) from port A of cell cpu.$shr$out/warp-v_for_sram.sv:2462$1010 ($shr).
Removed top 31 bits (of 32) from port Y of cell cpu.$shr$out/warp-v_for_sram.sv:2462$1010 ($shr).
Removed top 7 bits (of 32) from port A of cell cpu.$shr$out/warp-v_for_sram.sv:2462$1013 ($shr).
Removed top 31 bits (of 32) from port Y of cell cpu.$shr$out/warp-v_for_sram.sv:2462$1013 ($shr).
Removed top 4 bits (of 32) from port A of cell cpu.$shr$out/warp-v_for_sram.sv:2462$1016 ($shr).
Removed top 31 bits (of 32) from port Y of cell cpu.$shr$out/warp-v_for_sram.sv:2462$1016 ($shr).
Removed top 1 bits (of 5) from port B of cell cpu.$eq$out/warp-v_for_sram.sv:2466$1025 ($eq).
Removed top 2 bits (of 5) from port B of cell cpu.$eq$out/warp-v_for_sram.sv:2467$1026 ($eq).
Removed top 2 bits (of 3) from port B of cell cpu.$eq$out/warp-v_for_sram.sv:2471$1035 ($eq).
Removed top 1 bits (of 3) from port B of cell cpu.$eq$out/warp-v_for_sram.sv:2478$1056 ($eq).
Removed top 1 bits (of 5) from port B of cell cpu.$eq$out/warp-v_for_sram.sv:2481$1064 ($eq).
Removed top 2 bits (of 5) from port B of cell cpu.$eq$out/warp-v_for_sram.sv:2484$1073 ($eq).
Removed top 1 bits (of 3) from port B of cell cpu.$eq$out/warp-v_for_sram.sv:2486$1080 ($eq).
Removed top 1 bits (of 6) from port B of cell cpu.$eq$out/warp-v_for_sram.sv:2492$1104 ($eq).
Removed top 1 bits (of 5) from port B of cell cpu.$eq$out/warp-v_for_sram.sv:2493$1106 ($eq).
Removed top 1 bits (of 7) from port B of cell cpu.$eq$out/warp-v_for_sram.sv:2494$1114 ($eq).
Removed top 1 bits (of 2) from port B of cell cpu.$eq$out/warp-v_for_sram.sv:2545$1269 ($eq).
Removed top 1 bits (of 2) from port B of cell cpu.$add$out/warp-v_for_sram.sv:2605$1296 ($add).
Removed top 1 bits (of 2) from port B of cell cpu.$sub$out/warp-v_for_sram.sv:2606$1299 ($sub).
Removed top 29 bits (of 32) from port B of cell cpu.$add$out/warp-v_for_sram.sv:2764$1346 ($add).
Removed top 26 bits (of 32) from port A of cell cpu.$sub$out/warp-v_for_sram.sv:2786$1354 ($sub).
Removed top 25 bits (of 32) from port Y of cell cpu.$sub$out/warp-v_for_sram.sv:2786$1354 ($sub).
Removed top 26 bits (of 32) from port A of cell cpu.$sub$out/warp-v_for_sram.sv:2788$1359 ($sub).
Removed top 25 bits (of 32) from port Y of cell cpu.$sub$out/warp-v_for_sram.sv:2788$1359 ($sub).
Removed top 31 bits (of 32) from mux cell cpu.$ternary$out/warp-v_for_sram.sv:2790$1366 ($mux).
Removed top 31 bits (of 32) from mux cell cpu.$ternary$out/warp-v_for_sram.sv:2798$1375 ($mux).
Removed top 29 bits (of 30) from port B of cell cpu.$sub$out/warp-v_for_sram.sv:3112$1513 ($sub).
Removed top 63 bits (of 64) from port B of cell cpu.$add$out/warp-v_for_sram.sv:3115$1517 ($add).
Removed top 63 bits (of 64) from port B of cell cpu.$add$out/warp-v_for_sram.sv:3116$1518 ($add).
Removed top 63 bits (of 64) from port B of cell cpu.$add$out/warp-v_for_sram.sv:3117$1519 ($add).
Removed top 3 bits (of 4) from port A of cell cpu.$shl$out/warp-v_for_sram.sv:3176$1531 ($shl).
Removed top 1 bits (of 2) from port B of cell cpu.$eq$out/warp-v_for_sram.sv:3189$1537 ($eq).
Removed top 16 bits (of 36) from mux cell cpu.$ternary$out/warp-v_for_sram.sv:3196$1552 ($mux).
Removed top 31 bits (of 32) from port B of cell cpu.$and$out/warp-v_for_sram.sv:3243$1584 ($and).
Removed top 31 bits (of 32) from port B of cell cpu.$and$out/warp-v_for_sram.sv:3254$1606 ($and).
Removed top 29 bits (of 30) from port B of cell cpu.$add$out/warp-v_for_sram.sv:3292$1640 ($add).
Removed top 28 bits (of 32) from port B of cell cpu.$eq$out/warp-v_for_sram.sv:3551$1731 ($eq).
Removed top 24 bits (of 32) from port B of cell cpu.$gt$out/warp-v_for_sram.sv:3560$1739 ($gt).
Removed top 29 bits (of 32) from port B of cell cpu.$gt$out/warp-v_for_sram.sv:3560$1740 ($gt).
Removed top 32 bits (of 33) from mux cell cpu.$ternary$out/warp-v_for_sram.sv:2652$1823 ($mux).
Removed top 32 bits (of 33) from mux cell cpu.$ternary$out/warp-v_for_sram.sv:2652$1834 ($mux).
Removed top 4 bits (of 5) from port A of cell cpu.$eq$out/warp-v_for_sram.sv:3412$1847 ($eq).
Removed top 3 bits (of 5) from port A of cell cpu.$eq$out/warp-v_for_sram.sv:3412$1852 ($eq).
Removed top 3 bits (of 5) from port A of cell cpu.$eq$out/warp-v_for_sram.sv:3412$1857 ($eq).
Removed top 2 bits (of 5) from port A of cell cpu.$eq$out/warp-v_for_sram.sv:3412$1862 ($eq).
Removed top 2 bits (of 5) from port A of cell cpu.$eq$out/warp-v_for_sram.sv:3412$1867 ($eq).
Removed top 2 bits (of 5) from port A of cell cpu.$eq$out/warp-v_for_sram.sv:3412$1872 ($eq).
Removed top 2 bits (of 5) from port A of cell cpu.$eq$out/warp-v_for_sram.sv:3412$1877 ($eq).
Removed top 1 bits (of 5) from port A of cell cpu.$eq$out/warp-v_for_sram.sv:3412$1882 ($eq).
Removed top 1 bits (of 5) from port A of cell cpu.$eq$out/warp-v_for_sram.sv:3412$1887 ($eq).
Removed top 1 bits (of 5) from port A of cell cpu.$eq$out/warp-v_for_sram.sv:3412$1892 ($eq).
Removed top 1 bits (of 5) from port A of cell cpu.$eq$out/warp-v_for_sram.sv:3412$1897 ($eq).
Removed top 1 bits (of 5) from port A of cell cpu.$eq$out/warp-v_for_sram.sv:3412$1902 ($eq).
Removed top 1 bits (of 5) from port A of cell cpu.$eq$out/warp-v_for_sram.sv:3412$1907 ($eq).
Removed top 1 bits (of 5) from port A of cell cpu.$eq$out/warp-v_for_sram.sv:3412$1912 ($eq).
Removed top 1 bits (of 5) from port A of cell cpu.$eq$out/warp-v_for_sram.sv:3412$1917 ($eq).
Removed top 1 bits (of 5) from port B of cell cpu.$procmux$2018_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cpu.$procmux$2019_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cpu.$procmux$2020_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cpu.$procmux$2021_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cpu.$procmux$2022_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cpu.$procmux$2023_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cpu.$procmux$2024_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cpu.$procmux$2025_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cpu.$procmux$2026_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cpu.$procmux$2027_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cpu.$procmux$2028_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cpu.$procmux$2029_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell cpu.$procmux$2030_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell cpu.$procmux$2031_CMP0 ($eq).
Removed top 4 bits (of 5) from port B of cell cpu.$procmux$2032_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cpu.$procmux$2051_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cpu.$procmux$2052_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cpu.$procmux$2053_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cpu.$procmux$2054_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cpu.$procmux$2055_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cpu.$procmux$2056_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cpu.$procmux$2057_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cpu.$procmux$2058_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cpu.$procmux$2059_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cpu.$procmux$2060_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cpu.$procmux$2061_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cpu.$procmux$2062_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell cpu.$procmux$2063_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell cpu.$procmux$2064_CMP0 ($eq).
Removed top 4 bits (of 5) from port B of cell cpu.$procmux$2065_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cpu.$procmux$2084_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cpu.$procmux$2085_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cpu.$procmux$2086_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cpu.$procmux$2087_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cpu.$procmux$2088_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cpu.$procmux$2089_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cpu.$procmux$2090_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cpu.$procmux$2091_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cpu.$procmux$2092_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cpu.$procmux$2093_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cpu.$procmux$2094_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cpu.$procmux$2095_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell cpu.$procmux$2096_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell cpu.$procmux$2097_CMP0 ($eq).
Removed top 4 bits (of 5) from port B of cell cpu.$procmux$2098_CMP0 ($eq).
Removed top 20 bits (of 32) from FF cell cpu.$procdff$2221 ($dff).
Removed top 20 bits (of 32) from FF cell cpu.$procdff$2233 ($dff).
Removed top 1 bits (of 7) from FF cell cpu.$procdff$2235 ($dff).
Removed top 2 bits (of 5) from FF cell cpu.$procdff$2420 ($dff).
Removed top 1 bits (of 4) from FF cell cpu.$auto$ff.cc:266:slice$2436 ($sdff).
Removed top 1 bits (of 4) from port Y of cell cpu.$and$out/warp-v_for_sram.sv:2356$928 ($and).
Removed top 1 bits (of 4) from port A of cell cpu.$and$out/warp-v_for_sram.sv:2356$928 ($and).
Removed top 1 bits (of 4) from port B of cell cpu.$and$out/warp-v_for_sram.sv:2356$928 ($and).
Removed top 1 bits (of 4) from port Y of cell cpu.$and$out/warp-v_for_sram.sv:2356$919 ($and).
Removed top 1 bits (of 4) from port A of cell cpu.$and$out/warp-v_for_sram.sv:2356$919 ($and).
Removed top 1 bits (of 4) from port B of cell cpu.$and$out/warp-v_for_sram.sv:2356$919 ($and).
Removed top 1 bits (of 4) from port Y of cell cpu.$and$out/warp-v_for_sram.sv:2356$903 ($and).
Removed top 1 bits (of 4) from port A of cell cpu.$and$out/warp-v_for_sram.sv:2356$903 ($and).
Removed top 1 bits (of 4) from port B of cell cpu.$and$out/warp-v_for_sram.sv:2356$903 ($and).
Removed top 1 bits (of 4) from mux cell cpu.$ternary$out/warp-v_for_sram.sv:2358$918 ($mux).
Removed top 1 bits (of 4) from port Y of cell cpu.$and$out/warp-v_for_sram.sv:2356$895 ($and).
Removed top 1 bits (of 4) from port A of cell cpu.$and$out/warp-v_for_sram.sv:2356$895 ($and).
Removed top 1 bits (of 4) from port B of cell cpu.$and$out/warp-v_for_sram.sv:2356$895 ($and).
Removed top 1 bits (of 4) from port Y of cell cpu.$and$out/warp-v_for_sram.sv:2356$887 ($and).
Removed top 1 bits (of 4) from port A of cell cpu.$and$out/warp-v_for_sram.sv:2356$887 ($and).
Removed top 1 bits (of 4) from port B of cell cpu.$and$out/warp-v_for_sram.sv:2356$887 ($and).
Removed top 1 bits (of 4) from port Y of cell cpu.$and$out/warp-v_for_sram.sv:2356$879 ($and).
Removed top 1 bits (of 4) from port A of cell cpu.$and$out/warp-v_for_sram.sv:2356$879 ($and).
Removed top 1 bits (of 4) from port B of cell cpu.$and$out/warp-v_for_sram.sv:2356$879 ($and).
Removed top 1 bits (of 4) from port Y of cell cpu.$and$out/warp-v_for_sram.sv:2356$872 ($and).
Removed top 1 bits (of 4) from port A of cell cpu.$and$out/warp-v_for_sram.sv:2356$872 ($and).
Removed top 1 bits (of 4) from port B of cell cpu.$and$out/warp-v_for_sram.sv:2356$872 ($and).
Removed top 1 bits (of 4) from port Y of cell cpu.$and$out/warp-v_for_sram.sv:2356$865 ($and).
Removed top 1 bits (of 4) from port A of cell cpu.$and$out/warp-v_for_sram.sv:2356$865 ($and).
Removed top 1 bits (of 4) from port B of cell cpu.$and$out/warp-v_for_sram.sv:2356$865 ($and).
Removed top 1 bits (of 4) from port Y of cell cpu.$and$out/warp-v_for_sram.sv:2356$859 ($and).
Removed top 1 bits (of 4) from port A of cell cpu.$and$out/warp-v_for_sram.sv:2356$859 ($and).
Removed top 1 bits (of 4) from port B of cell cpu.$and$out/warp-v_for_sram.sv:2356$859 ($and).
Removed top 1 bits (of 4) from wire cpu.$and$out/warp-v_for_sram.sv:2356$859_Y.
Removed top 1 bits (of 4) from wire cpu.$and$out/warp-v_for_sram.sv:2356$865_Y.
Removed top 3 bits (of 4) from wire cpu.$ternary$out/warp-v_for_sram.sv:2358$858_Y.
Removed top 1 bits (of 5) from wire cpu.FETCH_Instr_GoodPathMask_a0.
Removed top 4 bits (of 5) from wire cpu.FETCH_Instr_GoodPathMask_n1.
Removed top 1 bits (of 5) from wire cpu.FETCH_Instr_next_good_path_mask_a0.
Removed top 1 bits (of 7) from wire cpu.FETCH_Instr_raw_funct7_a2.
Removed top 31 bits (of 32) from wire cpu.FETCH_Instr_sltiu_rslt_a2.

5.10. Executing PEEPOPT pass (run peephole optimizers).

5.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cpu..
Removed 0 unused cells and 15 unused wires.
<suppressed ~1 debug messages>

5.12. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module cpu:
  creating $macc model for $add$out/warp-v_for_sram.sv:2243$848 ($add).
  creating $macc model for $add$out/warp-v_for_sram.sv:2413$932 ($add).
  creating $macc model for $add$out/warp-v_for_sram.sv:2605$1296 ($add).
  creating $macc model for $add$out/warp-v_for_sram.sv:2711$1322 ($add).
  creating $macc model for $add$out/warp-v_for_sram.sv:2714$1324 ($add).
  creating $macc model for $add$out/warp-v_for_sram.sv:2754$1344 ($add).
  creating $macc model for $add$out/warp-v_for_sram.sv:2763$1345 ($add).
  creating $macc model for $add$out/warp-v_for_sram.sv:2764$1346 ($add).
  creating $macc model for $add$out/warp-v_for_sram.sv:2793$1369 ($add).
  creating $macc model for $add$out/warp-v_for_sram.sv:3115$1517 ($add).
  creating $macc model for $add$out/warp-v_for_sram.sv:3116$1518 ($add).
  creating $macc model for $add$out/warp-v_for_sram.sv:3117$1519 ($add).
  creating $macc model for $add$out/warp-v_for_sram.sv:3161$1526 ($add).
  creating $macc model for $add$out/warp-v_for_sram.sv:3292$1640 ($add).
  creating $macc model for $sub$out/warp-v_for_sram.sv:2606$1299 ($sub).
  creating $macc model for $sub$out/warp-v_for_sram.sv:2786$1354 ($sub).
  creating $macc model for $sub$out/warp-v_for_sram.sv:2788$1359 ($sub).
  creating $macc model for $sub$out/warp-v_for_sram.sv:2793$1368 ($sub).
  creating $macc model for $sub$out/warp-v_for_sram.sv:3112$1513 ($sub).
  creating $alu model for $macc $sub$out/warp-v_for_sram.sv:3112$1513.
  creating $alu model for $macc $sub$out/warp-v_for_sram.sv:2793$1368.
  creating $alu model for $macc $sub$out/warp-v_for_sram.sv:2788$1359.
  creating $alu model for $macc $sub$out/warp-v_for_sram.sv:2786$1354.
  creating $alu model for $macc $sub$out/warp-v_for_sram.sv:2606$1299.
  creating $alu model for $macc $add$out/warp-v_for_sram.sv:3292$1640.
  creating $alu model for $macc $add$out/warp-v_for_sram.sv:3161$1526.
  creating $alu model for $macc $add$out/warp-v_for_sram.sv:3117$1519.
  creating $alu model for $macc $add$out/warp-v_for_sram.sv:3116$1518.
  creating $alu model for $macc $add$out/warp-v_for_sram.sv:3115$1517.
  creating $alu model for $macc $add$out/warp-v_for_sram.sv:2793$1369.
  creating $alu model for $macc $add$out/warp-v_for_sram.sv:2764$1346.
  creating $alu model for $macc $add$out/warp-v_for_sram.sv:2763$1345.
  creating $alu model for $macc $add$out/warp-v_for_sram.sv:2754$1344.
  creating $alu model for $macc $add$out/warp-v_for_sram.sv:2714$1324.
  creating $alu model for $macc $add$out/warp-v_for_sram.sv:2711$1322.
  creating $alu model for $macc $add$out/warp-v_for_sram.sv:2605$1296.
  creating $alu model for $macc $add$out/warp-v_for_sram.sv:2413$932.
  creating $alu model for $macc $add$out/warp-v_for_sram.sv:2243$848.
  creating $alu model for $gt$out/warp-v_for_sram.sv:3560$1739 ($gt): new $alu
  creating $alu model for $gt$out/warp-v_for_sram.sv:3560$1740 ($gt): new $alu
  creating $alu model for $lt$out/warp-v_for_sram.sv:2244$851 ($lt): new $alu
  creating $alu model for $lt$out/warp-v_for_sram.sv:2747$1337 ($lt): new $alu
  creating $alu model for $lt$out/warp-v_for_sram.sv:2790$1365 ($lt): new $alu
  creating $alu model for $lt$out/warp-v_for_sram.sv:2798$1374 ($lt): merged with $sub$out/warp-v_for_sram.sv:2793$1368.
  creating $alu model for $eq$out/warp-v_for_sram.sv:2739$1325 ($eq): merged with $sub$out/warp-v_for_sram.sv:2793$1368.
  creating $alu cell for $lt$out/warp-v_for_sram.sv:2747$1337: $auto$alumacc.cc:485:replace_alu$2466
  creating $alu cell for $lt$out/warp-v_for_sram.sv:2244$851: $auto$alumacc.cc:485:replace_alu$2471
  creating $alu cell for $gt$out/warp-v_for_sram.sv:3560$1740: $auto$alumacc.cc:485:replace_alu$2482
  creating $alu cell for $gt$out/warp-v_for_sram.sv:3560$1739: $auto$alumacc.cc:485:replace_alu$2487
  creating $alu cell for $add$out/warp-v_for_sram.sv:2243$848: $auto$alumacc.cc:485:replace_alu$2492
  creating $alu cell for $add$out/warp-v_for_sram.sv:2413$932: $auto$alumacc.cc:485:replace_alu$2495
  creating $alu cell for $add$out/warp-v_for_sram.sv:2605$1296: $auto$alumacc.cc:485:replace_alu$2498
  creating $alu cell for $add$out/warp-v_for_sram.sv:2711$1322: $auto$alumacc.cc:485:replace_alu$2501
  creating $alu cell for $add$out/warp-v_for_sram.sv:2714$1324: $auto$alumacc.cc:485:replace_alu$2504
  creating $alu cell for $lt$out/warp-v_for_sram.sv:2790$1365: $auto$alumacc.cc:485:replace_alu$2507
  creating $alu cell for $add$out/warp-v_for_sram.sv:2754$1344: $auto$alumacc.cc:485:replace_alu$2512
  creating $alu cell for $add$out/warp-v_for_sram.sv:2763$1345: $auto$alumacc.cc:485:replace_alu$2515
  creating $alu cell for $add$out/warp-v_for_sram.sv:2764$1346: $auto$alumacc.cc:485:replace_alu$2518
  creating $alu cell for $add$out/warp-v_for_sram.sv:3115$1517: $auto$alumacc.cc:485:replace_alu$2521
  creating $alu cell for $add$out/warp-v_for_sram.sv:3116$1518: $auto$alumacc.cc:485:replace_alu$2524
  creating $alu cell for $add$out/warp-v_for_sram.sv:3117$1519: $auto$alumacc.cc:485:replace_alu$2527
  creating $alu cell for $add$out/warp-v_for_sram.sv:3161$1526: $auto$alumacc.cc:485:replace_alu$2530
  creating $alu cell for $add$out/warp-v_for_sram.sv:3292$1640: $auto$alumacc.cc:485:replace_alu$2533
  creating $alu cell for $sub$out/warp-v_for_sram.sv:2606$1299: $auto$alumacc.cc:485:replace_alu$2536
  creating $alu cell for $sub$out/warp-v_for_sram.sv:2786$1354: $auto$alumacc.cc:485:replace_alu$2539
  creating $alu cell for $sub$out/warp-v_for_sram.sv:2788$1359: $auto$alumacc.cc:485:replace_alu$2542
  creating $alu cell for $add$out/warp-v_for_sram.sv:2793$1369: $auto$alumacc.cc:485:replace_alu$2545
  creating $alu cell for $sub$out/warp-v_for_sram.sv:2793$1368, $lt$out/warp-v_for_sram.sv:2798$1374, $eq$out/warp-v_for_sram.sv:2739$1325: $auto$alumacc.cc:485:replace_alu$2548
  creating $alu cell for $sub$out/warp-v_for_sram.sv:3112$1513: $auto$alumacc.cc:485:replace_alu$2555
  created 24 $alu and 0 $macc cells.

5.13. Executing SHARE pass (SAT-based resource sharing).
Found 8 cells in module cpu that may be considered for resource sharing.
  Analyzing resource sharing options for $shr$out/warp-v_for_sram.sv:2787$1358 ($shr):
    Found 1 activation_patterns using ctrl signal \FETCH_Instr_second_issue_ld_a2.
    Found 1 candidates: $shr$out/warp-v_for_sram.sv:2785$1353
    Analyzing resource sharing with $shr$out/warp-v_for_sram.sv:2785$1353 ($shr):
      Found 1 activation_patterns using ctrl signal \FETCH_Instr_second_issue_ld_a2.
      Activation pattern for cell $shr$out/warp-v_for_sram.sv:2787$1358: \FETCH_Instr_second_issue_ld_a2 = 1'0
      Activation pattern for cell $shr$out/warp-v_for_sram.sv:2785$1353: \FETCH_Instr_second_issue_ld_a2 = 1'0
      Size of SAT problem: 0 cells, 5 variables, 9 clauses
      According to the SAT solver this pair of cells can not be shared.
      Model from SAT solver: \FETCH_Instr_second_issue_ld_a2 = 1'0
  Analyzing resource sharing options for $shr$out/warp-v_for_sram.sv:2785$1353 ($shr):
    Found 1 activation_patterns using ctrl signal \FETCH_Instr_second_issue_ld_a2.
    No candidates found.
  Analyzing resource sharing options for $shl$out/warp-v_for_sram.sv:2796$1371 ($shl):
    Found 1 activation_patterns using ctrl signal \FETCH_Instr_second_issue_ld_a2.
    Found 1 candidates: $shl$out/warp-v_for_sram.sv:2784$1352
    Analyzing resource sharing with $shl$out/warp-v_for_sram.sv:2784$1352 ($shl):
      Found 1 activation_patterns using ctrl signal \FETCH_Instr_second_issue_ld_a2.
      Activation pattern for cell $shl$out/warp-v_for_sram.sv:2796$1371: \FETCH_Instr_second_issue_ld_a2 = 1'0
      Activation pattern for cell $shl$out/warp-v_for_sram.sv:2784$1352: \FETCH_Instr_second_issue_ld_a2 = 1'0
      Size of SAT problem: 0 cells, 5 variables, 9 clauses
      According to the SAT solver this pair of cells can not be shared.
      Model from SAT solver: \FETCH_Instr_second_issue_ld_a2 = 1'0
  Analyzing resource sharing options for $shl$out/warp-v_for_sram.sv:2788$1360 ($shl):
    Found 1 activation_patterns using ctrl signal { \L1b_FETCH_Instr_Src[1].L1_reg_value_a2 [31] \FETCH_Instr_second_issue_ld_a2 }.
    Found 1 candidates: $shl$out/warp-v_for_sram.sv:2786$1355
    Analyzing resource sharing with $shl$out/warp-v_for_sram.sv:2786$1355 ($shl):
      Found 1 activation_patterns using ctrl signal { \L1b_FETCH_Instr_Src[1].L1_reg_value_a2 [31] \FETCH_Instr_second_issue_ld_a2 }.
      Activation pattern for cell $shl$out/warp-v_for_sram.sv:2788$1360: { \L1b_FETCH_Instr_Src[1].L1_reg_value_a2 [31] \FETCH_Instr_second_issue_ld_a2 } = 2'10
      Activation pattern for cell $shl$out/warp-v_for_sram.sv:2786$1355: { \L1b_FETCH_Instr_Src[1].L1_reg_value_a2 [31] \FETCH_Instr_second_issue_ld_a2 } = 2'10
      Size of SAT problem: 0 cells, 9 variables, 18 clauses
      According to the SAT solver this pair of cells can not be shared.
      Model from SAT solver: { \L1b_FETCH_Instr_Src[1].L1_reg_value_a2 [31] \FETCH_Instr_second_issue_ld_a2 } = 2'10
  Analyzing resource sharing options for $shl$out/warp-v_for_sram.sv:2786$1355 ($shl):
    Found 1 activation_patterns using ctrl signal { \L1b_FETCH_Instr_Src[1].L1_reg_value_a2 [31] \FETCH_Instr_second_issue_ld_a2 }.
    No candidates found.
  Analyzing resource sharing options for $shl$out/warp-v_for_sram.sv:2784$1352 ($shl):
    Found 1 activation_patterns using ctrl signal \FETCH_Instr_second_issue_ld_a2.
    No candidates found.
  Analyzing resource sharing options for $memrd$\FETCH_Instr_Regs_value_a3$out/warp-v_for_sram.sv:2649$1826 ($memrd):
    Found 1 activation_patterns using ctrl signal { $logic_and$out/warp-v_for_sram.sv:2656$1831_Y $logic_and$out/warp-v_for_sram.sv:2655$1829_Y }.
    Found 1 candidates: $memrd$\FETCH_Instr_Regs_value_a3$out/warp-v_for_sram.sv:2649$1815
    Analyzing resource sharing with $memrd$\FETCH_Instr_Regs_value_a3$out/warp-v_for_sram.sv:2649$1815 ($memrd):
      Found 1 activation_patterns using ctrl signal { $logic_and$out/warp-v_for_sram.sv:2656$1820_Y $logic_and$out/warp-v_for_sram.sv:2655$1818_Y }.
      Activation pattern for cell $memrd$\FETCH_Instr_Regs_value_a3$out/warp-v_for_sram.sv:2649$1826: { $logic_and$out/warp-v_for_sram.sv:2656$1831_Y $logic_and$out/warp-v_for_sram.sv:2655$1829_Y } = 2'00
      Activation pattern for cell $memrd$\FETCH_Instr_Regs_value_a3$out/warp-v_for_sram.sv:2649$1815: { $logic_and$out/warp-v_for_sram.sv:2656$1820_Y $logic_and$out/warp-v_for_sram.sv:2655$1818_Y } = 2'00
      Size of SAT problem: 0 cells, 2978 variables, 7732 clauses
      According to the SAT solver this pair of cells can not be shared.
      Model from SAT solver: { $logic_and$out/warp-v_for_sram.sv:2656$1831_Y $logic_and$out/warp-v_for_sram.sv:2655$1829_Y $logic_and$out/warp-v_for_sram.sv:2656$1820_Y $logic_and$out/warp-v_for_sram.sv:2655$1818_Y } = 4'0000
  Analyzing resource sharing options for $memrd$\FETCH_Instr_Regs_value_a3$out/warp-v_for_sram.sv:2649$1815 ($memrd):
    Found 1 activation_patterns using ctrl signal { $logic_and$out/warp-v_for_sram.sv:2656$1820_Y $logic_and$out/warp-v_for_sram.sv:2655$1818_Y }.
    No candidates found.

5.14. Executing OPT pass (performing simple optimizations).

5.14.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module cpu.
<suppressed ~2 debug messages>

5.14.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cpu'.
Removed a total of 0 cells.

5.14.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cpu..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~74 debug messages>

5.14.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cpu.
Performed a total of 0 changes.

5.14.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cpu'.
Removed a total of 0 cells.

5.14.6. Executing OPT_DFF pass (perform DFF optimizations).

5.14.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cpu..
Removed 2 unused cells and 9 unused wires.
<suppressed ~3 debug messages>

5.14.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module cpu.

5.14.9. Rerunning OPT passes. (Maybe there is more to do..)

5.14.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cpu..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~74 debug messages>

5.14.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cpu.
Performed a total of 0 changes.

5.14.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cpu'.
Removed a total of 0 cells.

5.14.13. Executing OPT_DFF pass (perform DFF optimizations).

5.14.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cpu..

5.14.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module cpu.

5.14.16. Finished OPT passes. (There is nothing left to do.)

5.15. Executing MEMORY pass.

5.15.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

5.15.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

5.15.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).
  Analyzing cpu.FETCH_Instr_Regs_value_a3 write port 0.

5.15.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

5.15.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).
Checking read port `\FETCH_Instr_Regs_value_a3'[0] in module `\cpu': no output FF found.
Checking read port `\FETCH_Instr_Regs_value_a3'[1] in module `\cpu': FF found, but with a mux select that doesn't seem to correspond to transparency logic.
Checking read port `\FETCH_Instr_Regs_value_a3'[2] in module `\cpu': FF found, but with a mux select that doesn't seem to correspond to transparency logic.
Checking read port address `\FETCH_Instr_Regs_value_a3'[0] in module `\cpu': no address FF found.
Checking read port address `\FETCH_Instr_Regs_value_a3'[1] in module `\cpu': no address FF found.
Checking read port address `\FETCH_Instr_Regs_value_a3'[2] in module `\cpu': no address FF found.

5.15.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cpu..

5.15.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).
Consolidating read ports of memory cpu.FETCH_Instr_Regs_value_a3 by address:

5.15.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

5.15.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cpu..

5.15.10. Executing MEMORY_COLLECT pass (generating $mem cells).

5.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cpu..

5.17. Executing OPT pass (performing simple optimizations).

5.17.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module cpu.
<suppressed ~143 debug messages>

5.17.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cpu'.
<suppressed ~5 debug messages>
Removed a total of 1 cells.

5.17.3. Executing OPT_DFF pass (perform DFF optimizations).

5.17.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cpu..
Removed 4 unused cells and 52 unused wires.
<suppressed ~5 debug messages>

5.17.5. Finished fast OPT passes.

5.18. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).
Mapping memory \FETCH_Instr_Regs_value_a3 in module \cpu:
  created 31 $dff cells and 0 static cells of width 32.
  read interface: 0 $dff and 93 $mux cells.
  write interface: 31 write mux blocks.

5.19. Executing OPT pass (performing simple optimizations).

5.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module cpu.
<suppressed ~108 debug messages>

5.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cpu'.
Removed a total of 0 cells.

5.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cpu..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~96 debug messages>

5.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cpu.
    Consolidated identical input bits for $mux cell $ternary$out/warp-v_for_sram.sv:2358$878:
      Old ports: A=3'111, B=3'000, Y=$ternary$out/warp-v_for_sram.sv:2358$878_Y [2:0]
      New ports: A=1'1, B=1'0, Y=$ternary$out/warp-v_for_sram.sv:2358$878_Y [0]
      New connections: $ternary$out/warp-v_for_sram.sv:2358$878_Y [2:1] = { $ternary$out/warp-v_for_sram.sv:2358$878_Y [0] $ternary$out/warp-v_for_sram.sv:2358$878_Y [0] }
    Consolidated identical input bits for $mux cell $ternary$out/warp-v_for_sram.sv:2358$886:
      Old ports: A=2'11, B=2'00, Y=$ternary$out/warp-v_for_sram.sv:2358$886_Y [1:0]
      New ports: A=1'1, B=1'0, Y=$ternary$out/warp-v_for_sram.sv:2358$886_Y [0]
      New connections: $ternary$out/warp-v_for_sram.sv:2358$886_Y [1] = $ternary$out/warp-v_for_sram.sv:2358$886_Y [0]
    Consolidated identical input bits for $mux cell $ternary$out/warp-v_for_sram.sv:2358$894:
      Old ports: A=2'11, B=2'00, Y=$ternary$out/warp-v_for_sram.sv:2358$894_Y [1:0]
      New ports: A=1'1, B=1'0, Y=$ternary$out/warp-v_for_sram.sv:2358$894_Y [0]
      New connections: $ternary$out/warp-v_for_sram.sv:2358$894_Y [1] = $ternary$out/warp-v_for_sram.sv:2358$894_Y [0]
    Consolidated identical input bits for $mux cell $ternary$out/warp-v_for_sram.sv:2358$902:
      Old ports: A=2'11, B=2'00, Y=$ternary$out/warp-v_for_sram.sv:2358$902_Y [1:0]
      New ports: A=1'1, B=1'0, Y=$ternary$out/warp-v_for_sram.sv:2358$902_Y [0]
      New connections: $ternary$out/warp-v_for_sram.sv:2358$902_Y [1] = $ternary$out/warp-v_for_sram.sv:2358$902_Y [0]
    Consolidated identical input bits for $mux cell $ternary$out/warp-v_for_sram.sv:2358$918:
      Old ports: A=3'111, B=3'000, Y=$ternary$out/warp-v_for_sram.sv:2358$918_Y [2:0]
      New ports: A=1'1, B=1'0, Y=$ternary$out/warp-v_for_sram.sv:2358$918_Y [0]
      New connections: $ternary$out/warp-v_for_sram.sv:2358$918_Y [2:1] = { $ternary$out/warp-v_for_sram.sv:2358$918_Y [0] $ternary$out/warp-v_for_sram.sv:2358$918_Y [0] }
    Consolidated identical input bits for $mux cell $ternary$out/warp-v_for_sram.sv:2358$927:
      Old ports: A=3'111, B=3'000, Y=$ternary$out/warp-v_for_sram.sv:2358$927_Y [2:0]
      New ports: A=1'1, B=1'0, Y=$ternary$out/warp-v_for_sram.sv:2358$927_Y [0]
      New connections: $ternary$out/warp-v_for_sram.sv:2358$927_Y [2:1] = { $ternary$out/warp-v_for_sram.sv:2358$927_Y [0] $ternary$out/warp-v_for_sram.sv:2358$927_Y [0] }
    Consolidated identical input bits for $mux cell $ternary$out/warp-v_for_sram.sv:2418$986:
      Old ports: A={ \FETCH_Instr_pc_inc_a0 1'0 }, B={ \FETCH_Instr_Pc_a0 1'0 }, Y=$ternary$out/warp-v_for_sram.sv:2418$986_Y
      New ports: A=\FETCH_Instr_pc_inc_a0, B=\FETCH_Instr_Pc_a0, Y=$ternary$out/warp-v_for_sram.sv:2418$986_Y [30:1]
      New connections: $ternary$out/warp-v_for_sram.sv:2418$986_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $ternary$out/warp-v_for_sram.sv:2789$1364:
      Old ports: A={ 31'0000000000000000000000000000000 \L1b_FETCH_Instr_Src[1].L1_reg_value_a2 [31] }, B={ 31'0000000000000000000000000000000 \FETCH_Instr_sltiu_rslt_a2 }, Y=\FETCH_Instr_slti_rslt_a2
      New ports: A=\L1b_FETCH_Instr_Src[1].L1_reg_value_a2 [31], B=\FETCH_Instr_sltiu_rslt_a2, Y=\FETCH_Instr_slti_rslt_a2 [0]
      New connections: \FETCH_Instr_slti_rslt_a2 [31:1] = 31'0000000000000000000000000000000
    Consolidated identical input bits for $mux cell $ternary$out/warp-v_for_sram.sv:2797$1373:
      Old ports: A={ 31'0000000000000000000000000000000 \L1b_FETCH_Instr_Src[1].L1_reg_value_a2 [31] }, B={ 31'0000000000000000000000000000000 \FETCH_Instr_sltu_rslt_a2 [0] }, Y=\FETCH_Instr_slt_rslt_a2
      New ports: A=\L1b_FETCH_Instr_Src[1].L1_reg_value_a2 [31], B=\FETCH_Instr_sltu_rslt_a2 [0], Y=\FETCH_Instr_slt_rslt_a2 [0]
      New connections: \FETCH_Instr_slt_rslt_a2 [31:1] = 31'0000000000000000000000000000000
    Consolidated identical input bits for $mux cell $ternary$out/warp-v_for_sram.sv:3161$1525:
      Old ports: A={ \FETCH_Instr_raw_s_imm_a2 [11] \FETCH_Instr_raw_s_imm_a2 [11] \FETCH_Instr_raw_s_imm_a2 [11] \FETCH_Instr_raw_s_imm_a2 [11] \FETCH_Instr_raw_s_imm_a2 [11] \FETCH_Instr_raw_s_imm_a2 [11] \FETCH_Instr_raw_s_imm_a2 [11] \FETCH_Instr_raw_s_imm_a2 [11] \FETCH_Instr_raw_s_imm_a2 [11] \FETCH_Instr_raw_s_imm_a2 [11] \FETCH_Instr_raw_s_imm_a2 [11] \FETCH_Instr_raw_s_imm_a2 [11] \FETCH_Instr_raw_s_imm_a2 [11] \FETCH_Instr_raw_s_imm_a2 [11] \FETCH_Instr_raw_s_imm_a2 [11] \FETCH_Instr_raw_s_imm_a2 [11] \FETCH_Instr_raw_s_imm_a2 [11] \FETCH_Instr_raw_s_imm_a2 [11] \FETCH_Instr_raw_s_imm_a2 [11] \FETCH_Instr_raw_s_imm_a2 [11] \FETCH_Instr_raw_s_imm_a2 [11:0] }, B={ \FETCH_Instr_raw_i_imm_a2 [11] \FETCH_Instr_raw_i_imm_a2 [11] \FETCH_Instr_raw_i_imm_a2 [11] \FETCH_Instr_raw_i_imm_a2 [11] \FETCH_Instr_raw_i_imm_a2 [11] \FETCH_Instr_raw_i_imm_a2 [11] \FETCH_Instr_raw_i_imm_a2 [11] \FETCH_Instr_raw_i_imm_a2 [11] \FETCH_Instr_raw_i_imm_a2 [11] \FETCH_Instr_raw_i_imm_a2 [11] \FETCH_Instr_raw_i_imm_a2 [11] \FETCH_Instr_raw_i_imm_a2 [11] \FETCH_Instr_raw_i_imm_a2 [11] \FETCH_Instr_raw_i_imm_a2 [11] \FETCH_Instr_raw_i_imm_a2 [11] \FETCH_Instr_raw_i_imm_a2 [11] \FETCH_Instr_raw_i_imm_a2 [11] \FETCH_Instr_raw_i_imm_a2 [11] \FETCH_Instr_raw_i_imm_a2 [11] \FETCH_Instr_raw_i_imm_a2 [11] \FETCH_Instr_raw_i_imm_a2 [11:0] }, Y=$ternary$out/warp-v_for_sram.sv:3161$1525_Y
      New ports: A=\FETCH_Instr_raw_s_imm_a2 [11:0], B=\FETCH_Instr_raw_i_imm_a2 [11:0], Y=$ternary$out/warp-v_for_sram.sv:3161$1525_Y [11:0]
      New connections: $ternary$out/warp-v_for_sram.sv:3161$1525_Y [31:12] = { $ternary$out/warp-v_for_sram.sv:3161$1525_Y [11] $ternary$out/warp-v_for_sram.sv:3161$1525_Y [11] $ternary$out/warp-v_for_sram.sv:3161$1525_Y [11] $ternary$out/warp-v_for_sram.sv:3161$1525_Y [11] $ternary$out/warp-v_for_sram.sv:3161$1525_Y [11] $ternary$out/warp-v_for_sram.sv:3161$1525_Y [11] $ternary$out/warp-v_for_sram.sv:3161$1525_Y [11] $ternary$out/warp-v_for_sram.sv:3161$1525_Y [11] $ternary$out/warp-v_for_sram.sv:3161$1525_Y [11] $ternary$out/warp-v_for_sram.sv:3161$1525_Y [11] $ternary$out/warp-v_for_sram.sv:3161$1525_Y [11] $ternary$out/warp-v_for_sram.sv:3161$1525_Y [11] $ternary$out/warp-v_for_sram.sv:3161$1525_Y [11] $ternary$out/warp-v_for_sram.sv:3161$1525_Y [11] $ternary$out/warp-v_for_sram.sv:3161$1525_Y [11] $ternary$out/warp-v_for_sram.sv:3161$1525_Y [11] $ternary$out/warp-v_for_sram.sv:3161$1525_Y [11] $ternary$out/warp-v_for_sram.sv:3161$1525_Y [11] $ternary$out/warp-v_for_sram.sv:3161$1525_Y [11] $ternary$out/warp-v_for_sram.sv:3161$1525_Y [11] }
    Consolidated identical input bits for $mux cell $ternary$out/warp-v_for_sram.sv:3171$1528:
      Old ports: A={ \L1b_FETCH_Instr_Src[2].L1_reg_value_a2 [7:0] \L1b_FETCH_Instr_Src[2].L1_reg_value_a2 [7:0] \L1b_FETCH_Instr_Src[2].L1_reg_value_a2 [7:0] \L1b_FETCH_Instr_Src[2].L1_reg_value_a2 [7:0] }, B={ \L1b_FETCH_Instr_Src[2].L1_reg_value_a2 [15:0] \L1b_FETCH_Instr_Src[2].L1_reg_value_a2 [15:0] }, Y=$ternary$out/warp-v_for_sram.sv:3171$1528_Y
      New ports: A=\L1b_FETCH_Instr_Src[2].L1_reg_value_a2 [7:0], B=\L1b_FETCH_Instr_Src[2].L1_reg_value_a2 [15:8], Y=$ternary$out/warp-v_for_sram.sv:3171$1528_Y [15:8]
      New connections: { $ternary$out/warp-v_for_sram.sv:3171$1528_Y [31:16] $ternary$out/warp-v_for_sram.sv:3171$1528_Y [7:0] } = { $ternary$out/warp-v_for_sram.sv:3171$1528_Y [15:8] \L1b_FETCH_Instr_Src[2].L1_reg_value_a2 [7:0] \L1b_FETCH_Instr_Src[2].L1_reg_value_a2 [7:0] }
    Consolidated identical input bits for $mux cell $ternary$out/warp-v_for_sram.sv:3175$1530:
      Old ports: A=4'0011, B=4'1100, Y=$ternary$out/warp-v_for_sram.sv:3175$1530_Y
      New ports: A=2'01, B=2'10, Y={ $ternary$out/warp-v_for_sram.sv:3175$1530_Y [2] $ternary$out/warp-v_for_sram.sv:3175$1530_Y [0] }
      New connections: { $ternary$out/warp-v_for_sram.sv:3175$1530_Y [3] $ternary$out/warp-v_for_sram.sv:3175$1530_Y [1] } = { $ternary$out/warp-v_for_sram.sv:3175$1530_Y [2] $ternary$out/warp-v_for_sram.sv:3175$1530_Y [0] }
    Consolidated identical input bits for $mux cell $ternary$out/warp-v_for_sram.sv:3196$1545:
      Old ports: A={ \FETCH_Instr_OrigLoadInst_ld_value_a2 [15:0] 4'0011 }, B={ \FETCH_Instr_OrigLoadInst_ld_value_a2 [31:16] 4'1100 }, Y=$ternary$out/warp-v_for_sram.sv:3196$1545_Y
      New ports: A={ \FETCH_Instr_OrigLoadInst_ld_value_a2 [15:0] 2'01 }, B={ \FETCH_Instr_OrigLoadInst_ld_value_a2 [31:16] 2'10 }, Y={ $ternary$out/warp-v_for_sram.sv:3196$1545_Y [19:4] $ternary$out/warp-v_for_sram.sv:3196$1545_Y [2] $ternary$out/warp-v_for_sram.sv:3196$1545_Y [0] }
      New connections: { $ternary$out/warp-v_for_sram.sv:3196$1545_Y [3] $ternary$out/warp-v_for_sram.sv:3196$1545_Y [1] } = { $ternary$out/warp-v_for_sram.sv:3196$1545_Y [2] $ternary$out/warp-v_for_sram.sv:3196$1545_Y [0] }
    Consolidated identical input bits for $mux cell $ternary$out/warp-v_for_sram.sv:3200$1549:
      Old ports: A={ \FETCH_Instr_OrigLoadInst_ld_value_a2 [31:24] 4'1000 }, B={ \FETCH_Instr_OrigLoadInst_ld_value_a2 [23:16] 4'0100 }, Y=$ternary$out/warp-v_for_sram.sv:3200$1549_Y
      New ports: A={ \FETCH_Instr_OrigLoadInst_ld_value_a2 [31:24] 2'10 }, B={ \FETCH_Instr_OrigLoadInst_ld_value_a2 [23:16] 2'01 }, Y=$ternary$out/warp-v_for_sram.sv:3200$1549_Y [11:2]
      New connections: $ternary$out/warp-v_for_sram.sv:3200$1549_Y [1:0] = 2'00
  Optimizing cells in module \cpu.
    Consolidated identical input bits for $mux cell $ternary$out/warp-v_for_sram.sv:3170$1529:
      Old ports: A=$ternary$out/warp-v_for_sram.sv:3171$1528_Y, B=\L1b_FETCH_Instr_Src[2].L1_reg_value_a2, Y=\FETCH_Instr_st_value_a2
      New ports: A={ $ternary$out/warp-v_for_sram.sv:3171$1528_Y [15:8] \L1b_FETCH_Instr_Src[2].L1_reg_value_a2 [7:0] $ternary$out/warp-v_for_sram.sv:3171$1528_Y [15:8] }, B=\L1b_FETCH_Instr_Src[2].L1_reg_value_a2 [31:8], Y=\FETCH_Instr_st_value_a2 [31:8]
      New connections: \FETCH_Instr_st_value_a2 [7:0] = \L1b_FETCH_Instr_Src[2].L1_reg_value_a2 [7:0]
    Consolidated identical input bits for $mux cell $ternary$out/warp-v_for_sram.sv:3199$1550:
      Old ports: A=$ternary$out/warp-v_for_sram.sv:3200$1549_Y, B={ \FETCH_Instr_OrigLoadInst_ld_value_a2 [15:8] 4'0010 }, Y=$ternary$out/warp-v_for_sram.sv:3199$1550_Y
      New ports: A={ $ternary$out/warp-v_for_sram.sv:3200$1549_Y [11:2] 1'0 }, B={ \FETCH_Instr_OrigLoadInst_ld_value_a2 [15:8] 3'001 }, Y=$ternary$out/warp-v_for_sram.sv:3199$1550_Y [11:1]
      New connections: $ternary$out/warp-v_for_sram.sv:3199$1550_Y [0] = 1'0
  Optimizing cells in module \cpu.
Performed a total of 16 changes.

5.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cpu'.
Removed a total of 0 cells.

5.19.6. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $mux $ternary$out/warp-v_for_sram.sv:2605$1301 in front of them:
        $auto$alumacc.cc:485:replace_alu$2498
        $auto$alumacc.cc:485:replace_alu$2536

5.19.7. Executing OPT_DFF pass (perform DFF optimizations).

5.19.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cpu..
Removed 0 unused cells and 169 unused wires.
<suppressed ~1 debug messages>

5.19.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module cpu.
<suppressed ~36 debug messages>

5.19.10. Rerunning OPT passes. (Maybe there is more to do..)

5.19.11. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cpu..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~90 debug messages>

5.19.12. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cpu.
    Consolidated identical input bits for $mux cell $auto$opt_share.cc:241:merge_operators$3220:
      Old ports: A=2'11, B=2'01, Y=$auto$rtlil.cc:2496:Mux$3221
      New ports: A=1'1, B=1'0, Y=$auto$rtlil.cc:2496:Mux$3221 [1]
      New connections: $auto$rtlil.cc:2496:Mux$3221 [0] = 1'1
  Optimizing cells in module \cpu.
Performed a total of 1 changes.

5.19.13. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cpu'.
Removed a total of 0 cells.

5.19.14. Executing OPT_SHARE pass.

5.19.15. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $memory\FETCH_Instr_Regs_value_a3[9]$2654 ($dff) from module cpu (D = \FETCH_Instr_rslt_a3, Q = \FETCH_Instr_Regs_value_a3[9]).
Adding EN signal on $memory\FETCH_Instr_Regs_value_a3[8]$2652 ($dff) from module cpu (D = \FETCH_Instr_rslt_a3, Q = \FETCH_Instr_Regs_value_a3[8]).
Adding EN signal on $memory\FETCH_Instr_Regs_value_a3[7]$2650 ($dff) from module cpu (D = \FETCH_Instr_rslt_a3, Q = \FETCH_Instr_Regs_value_a3[7]).
Adding EN signal on $memory\FETCH_Instr_Regs_value_a3[6]$2648 ($dff) from module cpu (D = \FETCH_Instr_rslt_a3, Q = \FETCH_Instr_Regs_value_a3[6]).
Adding EN signal on $memory\FETCH_Instr_Regs_value_a3[5]$2646 ($dff) from module cpu (D = \FETCH_Instr_rslt_a3, Q = \FETCH_Instr_Regs_value_a3[5]).
Adding EN signal on $memory\FETCH_Instr_Regs_value_a3[4]$2644 ($dff) from module cpu (D = \FETCH_Instr_rslt_a3, Q = \FETCH_Instr_Regs_value_a3[4]).
Adding EN signal on $memory\FETCH_Instr_Regs_value_a3[3]$2642 ($dff) from module cpu (D = \FETCH_Instr_rslt_a3, Q = \FETCH_Instr_Regs_value_a3[3]).
Adding EN signal on $memory\FETCH_Instr_Regs_value_a3[31]$2698 ($dff) from module cpu (D = \FETCH_Instr_rslt_a3, Q = \FETCH_Instr_Regs_value_a3[31]).
Adding EN signal on $memory\FETCH_Instr_Regs_value_a3[30]$2696 ($dff) from module cpu (D = \FETCH_Instr_rslt_a3, Q = \FETCH_Instr_Regs_value_a3[30]).
Adding EN signal on $memory\FETCH_Instr_Regs_value_a3[2]$2640 ($dff) from module cpu (D = \FETCH_Instr_rslt_a3, Q = \FETCH_Instr_Regs_value_a3[2]).
Adding EN signal on $memory\FETCH_Instr_Regs_value_a3[29]$2694 ($dff) from module cpu (D = \FETCH_Instr_rslt_a3, Q = \FETCH_Instr_Regs_value_a3[29]).
Adding EN signal on $memory\FETCH_Instr_Regs_value_a3[28]$2692 ($dff) from module cpu (D = \FETCH_Instr_rslt_a3, Q = \FETCH_Instr_Regs_value_a3[28]).
Adding EN signal on $memory\FETCH_Instr_Regs_value_a3[27]$2690 ($dff) from module cpu (D = \FETCH_Instr_rslt_a3, Q = \FETCH_Instr_Regs_value_a3[27]).
Adding EN signal on $memory\FETCH_Instr_Regs_value_a3[26]$2688 ($dff) from module cpu (D = \FETCH_Instr_rslt_a3, Q = \FETCH_Instr_Regs_value_a3[26]).
Adding EN signal on $memory\FETCH_Instr_Regs_value_a3[25]$2686 ($dff) from module cpu (D = \FETCH_Instr_rslt_a3, Q = \FETCH_Instr_Regs_value_a3[25]).
Adding EN signal on $memory\FETCH_Instr_Regs_value_a3[24]$2684 ($dff) from module cpu (D = \FETCH_Instr_rslt_a3, Q = \FETCH_Instr_Regs_value_a3[24]).
Adding EN signal on $memory\FETCH_Instr_Regs_value_a3[23]$2682 ($dff) from module cpu (D = \FETCH_Instr_rslt_a3, Q = \FETCH_Instr_Regs_value_a3[23]).
Adding EN signal on $memory\FETCH_Instr_Regs_value_a3[22]$2680 ($dff) from module cpu (D = \FETCH_Instr_rslt_a3, Q = \FETCH_Instr_Regs_value_a3[22]).
Adding EN signal on $memory\FETCH_Instr_Regs_value_a3[21]$2678 ($dff) from module cpu (D = \FETCH_Instr_rslt_a3, Q = \FETCH_Instr_Regs_value_a3[21]).
Adding EN signal on $memory\FETCH_Instr_Regs_value_a3[20]$2676 ($dff) from module cpu (D = \FETCH_Instr_rslt_a3, Q = \FETCH_Instr_Regs_value_a3[20]).
Adding EN signal on $memory\FETCH_Instr_Regs_value_a3[1]$2638 ($dff) from module cpu (D = \FETCH_Instr_rslt_a3, Q = \FETCH_Instr_Regs_value_a3[1]).
Adding EN signal on $memory\FETCH_Instr_Regs_value_a3[19]$2674 ($dff) from module cpu (D = \FETCH_Instr_rslt_a3, Q = \FETCH_Instr_Regs_value_a3[19]).
Adding EN signal on $memory\FETCH_Instr_Regs_value_a3[18]$2672 ($dff) from module cpu (D = \FETCH_Instr_rslt_a3, Q = \FETCH_Instr_Regs_value_a3[18]).
Adding EN signal on $memory\FETCH_Instr_Regs_value_a3[17]$2670 ($dff) from module cpu (D = \FETCH_Instr_rslt_a3, Q = \FETCH_Instr_Regs_value_a3[17]).
Adding EN signal on $memory\FETCH_Instr_Regs_value_a3[16]$2668 ($dff) from module cpu (D = \FETCH_Instr_rslt_a3, Q = \FETCH_Instr_Regs_value_a3[16]).
Adding EN signal on $memory\FETCH_Instr_Regs_value_a3[15]$2666 ($dff) from module cpu (D = \FETCH_Instr_rslt_a3, Q = \FETCH_Instr_Regs_value_a3[15]).
Adding EN signal on $memory\FETCH_Instr_Regs_value_a3[14]$2664 ($dff) from module cpu (D = \FETCH_Instr_rslt_a3, Q = \FETCH_Instr_Regs_value_a3[14]).
Adding EN signal on $memory\FETCH_Instr_Regs_value_a3[13]$2662 ($dff) from module cpu (D = \FETCH_Instr_rslt_a3, Q = \FETCH_Instr_Regs_value_a3[13]).
Adding EN signal on $memory\FETCH_Instr_Regs_value_a3[12]$2660 ($dff) from module cpu (D = \FETCH_Instr_rslt_a3, Q = \FETCH_Instr_Regs_value_a3[12]).
Adding EN signal on $memory\FETCH_Instr_Regs_value_a3[11]$2658 ($dff) from module cpu (D = \FETCH_Instr_rslt_a3, Q = \FETCH_Instr_Regs_value_a3[11]).
Adding EN signal on $memory\FETCH_Instr_Regs_value_a3[10]$2656 ($dff) from module cpu (D = \FETCH_Instr_rslt_a3, Q = \FETCH_Instr_Regs_value_a3[10]).

5.19.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cpu..
Removed 31 unused cells and 44 unused wires.
<suppressed ~32 debug messages>

5.19.17. Executing OPT_EXPR pass (perform const folding).
Optimizing module cpu.
<suppressed ~1 debug messages>

5.19.18. Rerunning OPT passes. (Maybe there is more to do..)

5.19.19. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cpu..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~58 debug messages>

5.19.20. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cpu.
Performed a total of 0 changes.

5.19.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cpu'.
Removed a total of 0 cells.

5.19.22. Executing OPT_SHARE pass.

5.19.23. Executing OPT_DFF pass (perform DFF optimizations).

5.19.24. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cpu..

5.19.25. Executing OPT_EXPR pass (perform const folding).
Optimizing module cpu.

5.19.26. Finished OPT passes. (There is nothing left to do.)

5.20. Executing TECHMAP pass (map to technology primitives).

5.20.1. Executing Verilog-2005 frontend: /opt/homebrew/bin/../share/yosys/techmap.v
Parsing Verilog input from `/opt/homebrew/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

5.20.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $sdff.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $logic_or.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $logic_and.
Using template $paramod$constmap:96ecfb2e085a06f98e436482477b47a8fabdf91d$paramod$bf9d9d742845b0881c7208690c55891251dddff4\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod$constmap:4b711fece832fd78ad174ca9e254d7d507545103$paramod$a4a727277fd7aa88cc75a82699be9f4190164f9f\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod$constmap:01684376fd268f8092c62e3b9ad66f3541e0febc$paramod$26e467e543d7c7a7e26bc6d4c6cb90c23eb1b4f0\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod$constmap:5f8870785ea75303eb2c961ce6f752e12cc9d920$paramod$6c8db7e96c1c78d61774c9086d7d3fa16c640e2a\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod$constmap:8cba7acb8df7c792584da48291988c372bf45fc2$paramod$9d5b5528182f55c1db7cafe05a21dbc543f92f09\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod$constmap:e2adc9e1f9ecc5f4f460d91508852eb1603d8f6e$paramod$314506a3597a04d287a0cc9305d2c9da35aafea3\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod$constmap:86fd5972739a9ba7add713667c806409085a15b2$paramod$bfbb8501b0bbc152116b60ae2b9f4b86c8e9697e\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using extmapper simplemap for cells of type $xor.
Using template $paramod$constmap:092011f7d4aee5efbb37c41f16125a055a79abd7$paramod$65b247ea06a847990f5821813abbc3df9880ca64\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$constmap:092011f7d4aee5efbb37c41f16125a055a79abd7$paramod$6d4fbc2dcd9c544aaaafaf61cd7012e4a3c13024\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod$12f939b61a2dcd484d76a40e620bc076ddd034fe\_90_alu for cells of type $alu.
Using template $paramod$constmap:b31c60e8fe29b85a66243f8c87fa4c3b0bd86537$paramod$dce7c1188cb25d2520d170426d59301c3b73f9e7\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$feecc7a0dbd012970970f2858f15e786e251f677\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod$00298f3f8094950cb9a5ff2fda48d0d8bde8806c\_90_alu for cells of type $alu.
Analyzing pattern of constant bits for this cell:
  Constant input on bit 0 of port A: 1'1
  Constant input on bit 1 of port A: 1'1
  Constant input on bit 2 of port A: 1'1
  Constant input on bit 3 of port A: 1'1
  Constant input on bit 4 of port A: 1'1
  Constant input on bit 5 of port A: 1'1
  Constant input on bit 6 of port A: 1'1
  Constant input on bit 7 of port A: 1'1
  Constant input on bit 8 of port A: 1'1
  Constant input on bit 9 of port A: 1'1
  Constant input on bit 10 of port A: 1'1
  Constant input on bit 11 of port A: 1'1
  Constant input on bit 12 of port A: 1'1
  Constant input on bit 13 of port A: 1'1
  Constant input on bit 14 of port A: 1'1
  Constant input on bit 15 of port A: 1'1
  Constant input on bit 16 of port A: 1'1
  Constant input on bit 17 of port A: 1'1
  Constant input on bit 18 of port A: 1'1
  Constant input on bit 19 of port A: 1'1
  Constant input on bit 20 of port A: 1'1
  Constant input on bit 21 of port A: 1'1
  Constant input on bit 22 of port A: 1'1
  Constant input on bit 23 of port A: 1'1
  Constant input on bit 24 of port A: 1'1
  Constant input on bit 25 of port A: 1'1
  Constant input on bit 26 of port A: 1'1
  Constant input on bit 27 of port A: 1'1
  Constant input on bit 28 of port A: 1'1
  Constant input on bit 29 of port A: 1'1
  Constant input on bit 30 of port A: 1'1
  Constant input on bit 31 of port A: 1'1
  Constant input on bit 6 of port B: 1'0
  Constant input on bit 7 of port B: 1'0
  Constant input on bit 8 of port B: 1'0
  Constant input on bit 9 of port B: 1'0
  Constant input on bit 10 of port B: 1'0
  Constant input on bit 11 of port B: 1'0
  Constant input on bit 12 of port B: 1'0
  Constant input on bit 13 of port B: 1'0
  Constant input on bit 14 of port B: 1'0
  Constant input on bit 15 of port B: 1'0
  Constant input on bit 16 of port B: 1'0
  Constant input on bit 17 of port B: 1'0
  Constant input on bit 18 of port B: 1'0
  Constant input on bit 19 of port B: 1'0
  Constant input on bit 20 of port B: 1'0
  Constant input on bit 21 of port B: 1'0
  Constant input on bit 22 of port B: 1'0
  Constant input on bit 23 of port B: 1'0
  Constant input on bit 24 of port B: 1'0
  Constant input on bit 25 of port B: 1'0
  Constant input on bit 26 of port B: 1'0
  Constant input on bit 27 of port B: 1'0
  Constant input on bit 28 of port B: 1'0
  Constant input on bit 29 of port B: 1'0
  Constant input on bit 30 of port B: 1'0
  Constant input on bit 31 of port B: 1'0
Creating constmapped module `$paramod$constmap:550f783ecc9a35465b2bb12edd6f12d7943fda3f$paramod$dce7c1188cb25d2520d170426d59301c3b73f9e7\_90_shift_ops_shr_shl_sshl_sshr'.

5.20.62. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$constmap:550f783ecc9a35465b2bb12edd6f12d7943fda3f$paramod$dce7c1188cb25d2520d170426d59301c3b73f9e7\_90_shift_ops_shr_shl_sshl_sshr..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
<suppressed ~5019 debug messages>

5.20.63. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$constmap:550f783ecc9a35465b2bb12edd6f12d7943fda3f$paramod$dce7c1188cb25d2520d170426d59301c3b73f9e7\_90_shift_ops_shr_shl_sshl_sshr.
<suppressed ~352 debug messages>
Removed 0 unused cells and 17 unused wires.
Using template $paramod$constmap:550f783ecc9a35465b2bb12edd6f12d7943fda3f$paramod$dce7c1188cb25d2520d170426d59301c3b73f9e7\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$335cfd09f1afa8139c4aafcbbe5f361887b79c5e\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using extmapper simplemap for cells of type $reduce_bool.
Using template $paramod$fbc7873bff55778c0b3173955b7e4bce1d9d6834\_90_alu for cells of type $alu.
Using template $paramod$constmap:66d421c313e4e958be776b99540ac2de3b59fdbc$paramod$77562a466236eb4a6d905351a0995599b75075cb\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$861f5302217787cd55fd1a501bc728125f176580\_90_alu for cells of type $alu.
Using template $paramod$cc80a4e89b0341cb117f5d28b0e7244620640141\_90_alu for cells of type $alu.
Using template $paramod$44a13d10af618e7fbe7b9aad2f6151ffcee1e2fa\_90_alu for cells of type $alu.
Using template $paramod$6fc37af1c109ae54e8aed83fcd995c12d378ce93\_90_alu for cells of type $alu.
Using template $paramod$403d07c18de10cda2ac652a859c56aea81aaf9b5\_90_alu for cells of type $alu.
Using template $paramod$7e708ae28ab761f11d0fb59d3ffc72f6a4baf5d9\_90_alu for cells of type $alu.
Using template $paramod$c3cd1564c35d873179656addd6052d7ea8b6d991\_90_alu for cells of type $alu.
Using template $paramod$91f82ead1edc61e0a1452110f15ef747116b421b\_90_alu for cells of type $alu.
Using template $paramod$d901baf1fb63991ac0a40d2e3f4807d372bb57a2\_90_alu for cells of type $alu.
Using template $paramod$b9513f2555ba02118b069422fea717af39120cf7\_90_alu for cells of type $alu.
Using template $paramod$50786ca810478877500f555d1213a03572271699\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $sdffce.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000111 for cells of type $lcu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000110 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000100000 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000011110 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000001000000 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000010100 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000010 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001000 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000011111 for cells of type $lcu.
No more expansions possible.
<suppressed ~5586 debug messages>

5.21. Executing OPT pass (performing simple optimizations).

5.21.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module cpu.
<suppressed ~3477 debug messages>

5.21.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cpu'.
<suppressed ~4431 debug messages>
Removed a total of 1477 cells.

5.21.3. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$ff.cc:266:slice$19754 ($_DFF_P_) from module cpu (D = $techmap$shr$out/warp-v_for_sram.sv:2462$1016.$4\buffer[27:0] [24], Q = \FETCH_Instr_is_j_type_a2, rval = 1'0).

5.21.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cpu..
Removed 611 unused cells and 2950 unused wires.
<suppressed ~616 debug messages>

5.21.5. Rerunning OPT passes. (Removed registers in this run.)

5.21.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module cpu.
<suppressed ~8 debug messages>

5.21.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cpu'.
<suppressed ~339 debug messages>
Removed a total of 113 cells.

5.21.8. Executing OPT_DFF pass (perform DFF optimizations).

5.21.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cpu..
Removed 0 unused cells and 59 unused wires.
<suppressed ~1 debug messages>

5.21.10. Finished fast OPT passes.

5.22. Executing ABC pass (technology mapping using ABC).

5.22.1. Extracting gate netlist of module `\cpu' to `<abc-temp-dir>/input.blif'..
Extracted 10927 gates and 12665 wires to a netlist network with 1736 inputs and 631 outputs.

5.22.1.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.22.1.2. Re-integrating ABC results.
ABC RESULTS:               MUX cells:     4200
ABC RESULTS:               AND cells:      294
ABC RESULTS:              XNOR cells:      199
ABC RESULTS:               NOR cells:      314
ABC RESULTS:               XOR cells:      466
ABC RESULTS:               NOT cells:      567
ABC RESULTS:              NAND cells:      482
ABC RESULTS:             ORNOT cells:      141
ABC RESULTS:                OR cells:     1671
ABC RESULTS:            ANDNOT cells:     2375
ABC RESULTS:        internal signals:    10298
ABC RESULTS:           input signals:     1736
ABC RESULTS:          output signals:      631
Removing temp directory.

5.23. Executing OPT pass (performing simple optimizations).

5.23.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module cpu.
<suppressed ~1537 debug messages>

5.23.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cpu'.
<suppressed ~51 debug messages>
Removed a total of 17 cells.

5.23.3. Executing OPT_DFF pass (perform DFF optimizations).

5.23.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cpu..
Removed 14 unused cells and 4297 unused wires.
<suppressed ~111 debug messages>

5.23.5. Finished fast OPT passes.

5.24. Executing HIERARCHY pass (managing design hierarchy).

5.24.1. Analyzing design hierarchy..
Top module:  \cpu

5.24.2. Analyzing design hierarchy..
Top module:  \cpu
Removed 0 unused modules.

5.25. Printing statistics.

=== cpu ===

   Number of wires:              10775
   Number of wire bits:          14151
   Number of public wires:         416
   Number of public wire bits:    3761
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              12464
     $_ANDNOT_                    2375
     $_AND_                        292
     $_DFFE_PP_                    992
     $_DFF_P_                      487
     $_MUX_                       4200
     $_NAND_                       482
     $_NOR_                        299
     $_NOT_                        553
     $_ORNOT_                      141
     $_OR_                        1671
     $_SDFFCE_PP0P_                  1
     $_SDFFCE_PP1P_                  1
     $_SDFF_PN0_                     3
     $_SDFF_PP0_                   277
     $_SDFF_PP1_                    25
     $_XNOR_                       199
     $_XOR_                        466

5.26. Executing CHECK pass (checking for obvious problems).
Checking module cpu...
Found and reported 0 problems.

6. Executing DFFLIBMAP pass (mapping DFF cells to sequential cells from liberty file).
  cell DFF_X2X2_90x128y6p (noninv, pins=4, area=0.00) is a direct match for cell type $_DFF_P_.
  cell DFFARN_X2X2_90x128y6p (noninv, pins=5, area=0.00) is a direct match for cell type $_DFF_PN0_.
  cell DFFASN_X2X2_90x128y6p (noninv, pins=5, area=0.00) is a direct match for cell type $_DFF_PN1_.
  cell DFFAR_X4X4_90x128y6p (noninv, pins=5, area=0.00) is a direct match for cell type $_DFF_PP0_.
  cell DFFAS_X2X2_90x128y6p (noninv, pins=5, area=0.00) is a direct match for cell type $_DFF_PP1_.
  cell DFFARNASN_X2X2_90x128y6p (noninv, pins=6, area=0.00) is a direct match for cell type $_DFFSR_PNN_.
  final dff cell mappings:
    unmapped dff cell: $_DFF_N_
    \DFF_X2X2_90x128y6p _DFF_P_ (.ck( C), .d( D), .q( Q), .qn(~Q));
    unmapped dff cell: $_DFF_NN0_
    unmapped dff cell: $_DFF_NN1_
    unmapped dff cell: $_DFF_NP0_
    unmapped dff cell: $_DFF_NP1_
    \DFFARN_X2X2_90x128y6p _DFF_PN0_ (.ck( C), .d( D), .q( Q), .qn(~Q), .rn( R));
    \DFFASN_X2X2_90x128y6p _DFF_PN1_ (.ck( C), .d( D), .q( Q), .qn(~Q), .sn( R));
    \DFFAR_X4X4_90x128y6p _DFF_PP0_ (.ck( C), .d( D), .q( Q), .qn(~Q), .r( R));
    \DFFAS_X2X2_90x128y6p _DFF_PP1_ (.ck( C), .d( D), .q( Q), .qn(~Q), .s( R));
    unmapped dff cell: $_DFFSR_NNN_
    unmapped dff cell: $_DFFSR_NNP_
    unmapped dff cell: $_DFFSR_NPN_
    unmapped dff cell: $_DFFSR_NPP_
    \DFFARNASN_X2X2_90x128y6p _DFFSR_PNN_ (.ck( C), .d( D), .q( Q), .qn(~Q), .rn( R), .sn( S));
    unmapped dff cell: $_DFFSR_PNP_
    unmapped dff cell: $_DFFSR_PPN_
    unmapped dff cell: $_DFFSR_PPP_

6.1. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).
Mapping DFF cells in module `\cpu':
  mapped 1786 $_DFF_P_ cells to \DFF_X2X2_90x128y6p cells.

7. Executing ABC pass (technology mapping using ABC).

7.1. Extracting gate netlist of module `\cpu' to `<abc-temp-dir>/input.blif'..
Extracted 11979 gates and 13917 wires to a netlist network with 1936 inputs and 1584 outputs.

7.1.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /Users/harry/Desktop/ar_cpu/lib/ARlogic.yosys.lib 
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Warning: Templates are not defined.
ABC: Libery parser cannot read "time_unit".  Assuming   time_unit : "1ns".
ABC: Libery parser cannot read "capacitive_load_unit". Assuming   capacitive_load_unit(1, pf).
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFARNASN_X2X2_90x128y6p".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFARN_X2X2_90x128y6p".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFAR_X4X4_90x128y6p".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFASN_X2X2_90x128y6p".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFAS_X2X2_90x128y6p".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_X2X2_90x128y6p".
ABC: Library "XARlogic_90x128y6p" from "/Users/harry/Desktop/ar_cpu/lib/ARlogic.yosys.lib" has 47 cells (6 skipped: 6 seq; 0 tri-state; 0 no func; 0 dont_use).  Time =     0.00 sec
ABC: Memory =    0.16 MB. Time =     0.00 sec
ABC: + strash 
ABC: + &get -n 
ABC: + &fraig -x 
ABC: + &put 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

7.1.2. Re-integrating ABC results.
ABC RESULTS:   OAI33_X0X1_90x128y6p cells:        1
ABC RESULTS:   OAI222_X1X0_90x128y6p cells:        2
ABC RESULTS:   INV_X4X4_90x128y6p cells:       69
ABC RESULTS:   MUX31_X2X2_90x128y6p cells:      145
ABC RESULTS:   MUX41_X2X2_90x128y6p cells:      555
ABC RESULTS:   AOI222_X0X1_90x128y6p cells:      148
ABC RESULTS:   OAI32_X0X1_90x128y6p cells:        6
ABC RESULTS:   NOR4N_X2X2_90x128y6p cells:       51
ABC RESULTS:   OAI221_X1X0_90x128y6p cells:       36
ABC RESULTS:   OAI22_X0X0_90x128y6p cells:       21
ABC RESULTS:   NAND4_X1X0_90x128y6p cells:       20
ABC RESULTS:   OR2_X2X2_90x128y6p cells:       95
ABC RESULTS:   OAI2NN2_X1X1_90x128y6p cells:       72
ABC RESULTS:   MUXN21_X0X0_90x128y6p cells:      136
ABC RESULTS:   AOI221_X0X2_90x128y6p cells:      142
ABC RESULTS:   AOI22_X0X0_90x128y6p cells:      127
ABC RESULTS:   AOI33_X1X0_90x128y6p cells:       28
ABC RESULTS:   OAI211_X0X0_90x128y6p cells:       97
ABC RESULTS:   AOI32_X1X0_90x128y6p cells:       80
ABC RESULTS:   NAND4N_X2X2_90x128y6p cells:       53
ABC RESULTS:   NAND3_X2X0_90x128y6p cells:       38
ABC RESULTS:   OAI31_X0X0_90x128y6p cells:       47
ABC RESULTS:   OR4_X2X2_90x128y6p cells:       25
ABC RESULTS:   NAND2_X2X1_90x128y6p cells:      107
ABC RESULTS:   OR3_X2X2_90x128y6p cells:       25
ABC RESULTS:   OAI21_X0X0_90x128y6p cells:      200
ABC RESULTS:   NOR3_X0X2_90x128y6p cells:       39
ABC RESULTS:   NOR4_X0X1_90x128y6p cells:       29
ABC RESULTS:   NAND4NN_X1X0_90x128y6p cells:       61
ABC RESULTS:   AND3_X2X2_90x128y6p cells:      154
ABC RESULTS:   NOR4NN_X0X1_90x128y6p cells:       99
ABC RESULTS:   NOR3N_X0X2_90x128y6p cells:       69
ABC RESULTS:   XOR2_X0X0_90x128y6p cells:      195
ABC RESULTS:   NAND3N_X2X0_90x128y6p cells:      200
ABC RESULTS:   AND2_X2X2_90x128y6p cells:      245
ABC RESULTS:   AND4_X1X1_90x128y6p cells:      139
ABC RESULTS:   NAND2N_X2X1_90x128y6p cells:      256
ABC RESULTS:   AOI2NN2_X2X2_90x128y6p cells:       43
ABC RESULTS:   NOR2_X1X2_90x128y6p cells:       97
ABC RESULTS:   XNOR2_X0X0_90x128y6p cells:      344
ABC RESULTS:   AOI21_X0X0_90x128y6p cells:      390
ABC RESULTS:   AOI31_X1X0_90x128y6p cells:      126
ABC RESULTS:   AOI211_X0X2_90x128y6p cells:      269
ABC RESULTS:   AOI2NN1_X1X1_90x128y6p cells:      133
ABC RESULTS:   MUX21_X2X2_90x128y6p cells:     1171
ABC RESULTS:   NOR2N_X1X2_90x128y6p cells:      261
ABC RESULTS:        internal signals:    10397
ABC RESULTS:           input signals:     1936
ABC RESULTS:          output signals:     1584
Removing temp directory.

8. Executing Verilog backend.

8.1. Executing BMUXMAP pass.

8.2. Executing DEMUXMAP pass.
Dumping module `\cpu'.

9. Executing TECHMAP pass (map to technology primitives).

9.1. Continuing TECHMAP pass.
Using template DFF_X2X2_90x128y6p for cells of type DFF_X2X2_90x128y6p.
Using template INV_X4X4_90x128y6p for cells of type INV_X4X4_90x128y6p.
Using template NAND2N_X2X1_90x128y6p for cells of type NAND2N_X2X1_90x128y6p.
Using template AOI21_X0X0_90x128y6p for cells of type AOI21_X0X0_90x128y6p.
Using template XNOR2_X0X0_90x128y6p for cells of type XNOR2_X0X0_90x128y6p.
Using template AND2_X2X2_90x128y6p for cells of type AND2_X2X2_90x128y6p.
Using template AOI31_X1X0_90x128y6p for cells of type AOI31_X1X0_90x128y6p.
Using template AOI2NN2_X2X2_90x128y6p for cells of type AOI2NN2_X2X2_90x128y6p.
Using template NOR2_X1X2_90x128y6p for cells of type NOR2_X1X2_90x128y6p.
Using template AND4_X1X1_90x128y6p for cells of type AND4_X1X1_90x128y6p.
Using template AOI211_X0X2_90x128y6p for cells of type AOI211_X0X2_90x128y6p.
Using template AOI2NN1_X1X1_90x128y6p for cells of type AOI2NN1_X1X1_90x128y6p.
Using template NOR4_X0X1_90x128y6p for cells of type NOR4_X0X1_90x128y6p.
Using template OAI21_X0X0_90x128y6p for cells of type OAI21_X0X0_90x128y6p.
Using template OR2_X2X2_90x128y6p for cells of type OR2_X2X2_90x128y6p.
Using template NOR3N_X0X2_90x128y6p for cells of type NOR3N_X0X2_90x128y6p.
Using template NAND3N_X2X0_90x128y6p for cells of type NAND3N_X2X0_90x128y6p.
Using template NOR2N_X1X2_90x128y6p for cells of type NOR2N_X1X2_90x128y6p.
Using template NOR4N_X2X2_90x128y6p for cells of type NOR4N_X2X2_90x128y6p.
Using template NAND4N_X2X2_90x128y6p for cells of type NAND4N_X2X2_90x128y6p.
Using template NAND2_X2X1_90x128y6p for cells of type NAND2_X2X1_90x128y6p.
Using template NOR4NN_X0X1_90x128y6p for cells of type NOR4NN_X0X1_90x128y6p.
Using template NOR3_X0X2_90x128y6p for cells of type NOR3_X0X2_90x128y6p.
Using template OR4_X2X2_90x128y6p for cells of type OR4_X2X2_90x128y6p.
Using template MUXN21_X0X0_90x128y6p for cells of type MUXN21_X0X0_90x128y6p.
Using template MUX21_X2X2_90x128y6p for cells of type MUX21_X2X2_90x128y6p.
Using template XOR2_X0X0_90x128y6p for cells of type XOR2_X0X0_90x128y6p.
Using template AND3_X2X2_90x128y6p for cells of type AND3_X2X2_90x128y6p.
Using template AOI22_X0X0_90x128y6p for cells of type AOI22_X0X0_90x128y6p.
Using template OAI211_X0X0_90x128y6p for cells of type OAI211_X0X0_90x128y6p.
Using template OR3_X2X2_90x128y6p for cells of type OR3_X2X2_90x128y6p.
Using template NAND4NN_X1X0_90x128y6p for cells of type NAND4NN_X1X0_90x128y6p.
Using template NAND3_X2X0_90x128y6p for cells of type NAND3_X2X0_90x128y6p.
Using template MUX41_X2X2_90x128y6p for cells of type MUX41_X2X2_90x128y6p.
Using template AOI222_X0X1_90x128y6p for cells of type AOI222_X0X1_90x128y6p.
Using template AOI221_X0X2_90x128y6p for cells of type AOI221_X0X2_90x128y6p.
Using template MUX31_X2X2_90x128y6p for cells of type MUX31_X2X2_90x128y6p.
Using template OAI2NN2_X1X1_90x128y6p for cells of type OAI2NN2_X1X1_90x128y6p.
Using template OAI31_X0X0_90x128y6p for cells of type OAI31_X0X0_90x128y6p.
Using template AOI32_X1X0_90x128y6p for cells of type AOI32_X1X0_90x128y6p.
Using template NAND4_X1X0_90x128y6p for cells of type NAND4_X1X0_90x128y6p.
Using template OAI221_X1X0_90x128y6p for cells of type OAI221_X1X0_90x128y6p.
Using template OAI22_X0X0_90x128y6p for cells of type OAI22_X0X0_90x128y6p.
Using template AOI33_X1X0_90x128y6p for cells of type AOI33_X1X0_90x128y6p.
Using template OAI32_X0X1_90x128y6p for cells of type OAI32_X0X1_90x128y6p.
Using template OAI33_X0X1_90x128y6p for cells of type OAI33_X0X1_90x128y6p.
Using template OAI222_X1X0_90x128y6p for cells of type OAI222_X1X0_90x128y6p.
No more expansions possible.
<suppressed ~8487 debug messages>

Compiling Gate-Level warp-v_for_sram in ar

iverilog -g2012 -I ../extern -Wtimescale -D DUMPFILE="out/warp-v_for_sram_ar.vcd" -o out/warp-v_for_sram_ar out/warp-v_for_sram_ar.v ./generic_tb.v lib/ARlogic.v src/warp-v_sram.v

Simulating Gate-Level ar warp-v_for_sram

VCD info: dumpfile out/warp-v_for_sram_ar.vcd opened for output.
VCD warning: $dumpvars: Unsupported argument type (vpiPackage)
Simulation FAILED!!!
FATAL: ./generic_tb.v:44: 
       Time: 41000000 Scope: tb
